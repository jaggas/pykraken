---
openapi: 3.0.0
info:
  title: REST API
  description: "# General Usage\n\nThis document details use of Kraken's REST API for our spot exchange. The [Websockets API](https://docs.kraken.com/websockets) and [Kraken Futures API](https://support.kraken.com/hc/en-us/sections/360012894412-Futures-API) are documented separately. Our REST API is organised into publicly accessible endpoints (market data, exchange status, etc.), and private authenticated endpoints (trading, funding, user data) which require requests to be signed.\n\n## Support \n\nFurther information and FAQs may be found on the [API section](https://support.kraken.com/hc/en-us/sections/4402371110548-API) of our support pages. If you have trouble making any standard requests that our system permits, please [send us](https://support.kraken.com/hc/en-us/requests/new?ticket_form_id=360000104043) a full copy of the request(s) that you're attempting, including your IP address and all headers, so that we may investigate further.\n\n## Requests, Responses and Errors\n\n### Requests\nRequest payloads are [form-encoded](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) (`Content-Type: application/x-www-form-urlencoded`), and all requests must specify a `User-Agent` in their headers.\n\n### Responses\nResponses are JSON encoded and contain one or two top-level keys (`result` and `error` for successful requests or those with warnings, or only `error` for failed or rejected requests)\n\n#### Example Successful Response\n```javascript\n{\n  \"error\": [],\n  \"result\": {\n    \"status\": \"online\",\n    \"timestamp\": \"2021-03-22T17:18:03Z\"\n  }\n}\n```\n> GET https://api.kraken.com/0/public/SystemStatus\n\n#### Example Rejection\n```javascript\n{\n  \"error\": [\n    \"EGeneral:Invalid arguments:ordertype\"\n  ]\n}\n```\n\n### Error Details\n\nHTTP status codes are generally not used by our API to convey information about the state of requests -- any errors or warnings are denoted in the `error` field of the response as described above. Status codes __other__ than 200 indicate that there was an issue with the request reaching our servers.\n\n`error` messages follow the general format `<severity><category>`:`<error msg>`[`:add'l text`]\n\n* `severity` can be either `E` for error or `W` for warning\n* `category` can be one of `General`, `Auth`, `API`, `Query`, `Order`, `Trade`, `Funding`, or `Service`\n* `error msg` can be any text string that describes the reason for the error\n\n#### Some Common Examples\n\n| Error | Additional Info |\n| -- | -- |\n| EGeneral:Invalid arguments | The request payload is malformed, incorrect or ambiguous. |\n| EGeneral:Invalid arguments:Index unavailable |  Index pricing is unavailable for stop/profit orders on this pair. |\n| EService:Unavailable | The matching engine or API is offline |\n| EService:Market in cancel_only mode | Request can't be made at this time. (See `SystemStatus` endpoint.) |\n| EService:Market in post_only mode | Request can't be made at this time. (See `SystemStatus` endpoint.) |   \n| EService:Deadline elapsed | The request timed out according to the default or specified `deadline` |\n| EAPI:Invalid key | An invalid `API-Key` header was supplied (see Authentication section) |\n| EAPI:Invalid signature | An invalid `API-Sign` header was supplied (see Authentication section) |\n| EAPI:Invalid nonce | An invalid `nonce` was supplied (see Authentication section) |\n| EGeneral:Permission denied | API key doesn't have permission to make this request. |    \n| EOrder:Cannot open position | User/tier is ineligible for margin trading |\n| EOrder:Margin allowance exceeded | User has exceeded their margin allowance |\n| EOrder:Margin level too low | Client has insufficient equity or collateral |\n| EOrder:Margin position size exceeded | Client would exceed the maximum position size for this pair |\n| EOrder:Insufficient margin | Exchange does not have available funds for this margin trade |\n| EOrder:Insufficient funds | Client does not have the necessary funds |\n| EOrder:Order minimum not met | Order size does not meet `ordermin`. (See `AssetPairs` endpoint.)  |\n| EOrder:Orders limit exceeded | (See Rate Limits section) |\n| EOrder:Rate limit exceeded | (See Rate Limits section) |\n| EOrder:Positions limit exceeded |  |\n| EOrder:Unknown position |  |\n\nAdditional information can be found on our [support center](https://support.kraken.com/hc/en-us/articles/360001491786-API-error-messages).\n\n\n\n# Authentication\n\nAuthenticated requests must include both `API-Key` and `API-Sign` HTTP headers, and `nonce` in the request payload. `otp` is also required in the payload if two-factor authentication (2FA) is enabled.\n\n\n## Nonce and 2FA\n\n### `nonce`\n\nNonce must be an always increasing, unsigned 64-bit integer, for each request that is made with a particular API key. While a simple counter would provide a valid nonce, a more usual method of generating a valid nonce is to use e.g. a UNIX timestamp in milliseconds.\n\n> **Note:** There is no way to reset the nonce for an API key to a lower value, so be sure to use a nonce generation method that won't produce numbers less than the previous nonce. Too many requests with invalid nonces (EAPI:Invalid nonce) can result in temporary bans. Problems can arise from requests arriving out of order due to API keys being shared across processes, or from system clock drift/recalibration. An optional \"nonce window\" can be configured to specify a tolerance between nonce values. Additional info can be found in our [support pages](https://support.kraken.com/hc/en-us/articles/360000906023-What-is-a-nonce-).\n\n### `otp`\n\nIf two-factor authentication (2FA) is enabled for the API key and action in question, the one time password must be specified in the payload's `otp` value.\n\n\n## Headers and Signature\n\n<SecurityDefinitions />\n\n# Rate Limits\n\nWe have various safeguards in place to protect against system abuse, order book manipulation, DDoS attacks, etc. For REST API requests, these are broadly organised into rate limits specific to the REST API, and rate limits which apply to any trading requests.\n\n> __Note:__ For clients with performance sensitive applications, we strongly recommend the use of our Websockets API for minimising request latency and receiving real-time information, reducing or eliminating the need to frequently poll REST endpoints.\n\n## REST API Rate Limits\n\n### Limits\n\nEvery REST API user has a \"call counter\" which starts at `0`. Ledger/trade history calls increase the counter by `2`. All other API calls increase this counter by `1` (except AddOrder, CancelOrder which operate on a different limiter detailed further below).\n\n| Tier         | Max API Counter | API Counter Decay |\n| ------------ | --------------- | ----------------- |\n| Starter      | 15              | -0.33/sec         |\n| Intermediate | 20              | -0.5/sec          |\n| Pro          | 20              | -1/sec            |\n\nThe user's counter is reduced every couple of seconds depending on their verification tier. Each API key's counter is separate, and if the counter exceeds the maximum value, subsequent calls using that API key would be rate limited. If the rate limits are reached, additional calls will be restricted for a few seconds (or possibly longer if calls continue to be made while the rate limits are active).\n\n### Errors\n\n* \"EAPI:Rate limit exceeded\" if the REST API counter exceeds the user's maximum.\n* \"EService: Throttled: [UNIX timestamp]\" if there are too many concurrent requests. Try again after [timestamp].\n\nAdditional information can be found on our [support center](https://support.kraken.com/hc/en-us/articles/206548367-What-are-the-API-rate-limits-).\n\n## Matching Engine Rate Limits\n\n### Limits\n\nSeparate limits apply to the number of orders clients may have open in each pair at a time, and the speed with which they may add and cancel orders in each pair. These limits vary by the account verification tier: \n\n| Tier      | Max Num Orders | Max Ratecount | Ratecount Decay |\n| ----------- | ----------- | ----------- | ----------- |\n| Starter      | 60       | 60 | -1/sec |\n| Intermediate   | 80 | 125 | -2.34/sec |\n| Pro     | 225 | 180 | -3.75/sec |\n\n### Penalties\n\nThe speed is controlled by a ratecounter for each (client, pair) which starts at zero, is incremented when penalties are applied, and decremented according to the decay rates above. A penalty is added to the ratecounter for each new order placed (`AddOrder`) or cancelled (`CancelOrder`, `CancelAll`, `CancelAllOrdersAfter`) on the pair. The cancellation penalty varies according to the lifetime of the order.\n\n| Action       |    | <5sec  | <10sec | <15sec | <45sec | <90sec | <300s | >300s |\n| ------------ | -- | -- | -- | -- | -- | -- | -- | -- |\n| Add Order    | +1 |    |    |    |    |    |    |    |\n| Cancel Order |    | +8 | +6 | +5 | +4 | +2 | +1 | 0 |\n\n> __Note:__ A client's exact ratecounter values can be monitored via the Websockets [openOrders](https://docs.kraken.com/websockets/#message-openOrders) feed.\n\n### Errors\n\n* \"EOrder:Orders limit exceeded\" if the number of open orders in a given pair is exceeded\n* \"EOrder:Rate limit exceeded\" if the user's max ratecount is exceeded for a given pair\n\nAdditional information can be found on our [support center](https://support.kraken.com/hc/en-us/articles/360045239571).\n\n# Changelog\n\n* Dec 2021 - Add REST `AddOrder` support for optional parameter trigger and values `last` (last traded price) and `index`.\n* Sep 2021 - Add REST `AddOrder` support for optional parameter `deadline`\n* Sep 2021 - Add REST `AddOrder` support for optional parameter `timeinforce` and value `ioc` (Immediate-or-cancel)\n* July 2021 - Allow querying of `WithdrawStatus` with read-only API key permission \"Query Ledgers\".\n\n**Note:** Most changes affecting our APIs or trading engine behaviour are currently being tracked on our [Websockets](https://docs.kraken.com/websockets/#changelog) changelog, until these documents are combined.\n\n# Example API Clients\n\nIn order to achieve maximum performance, security and flexibility for your particular needs, we strongly encourage the implementation of this API with your own code, and to minimise reliance on third party software.\n\nThat being said, in order to aid with rapid development and prototyping, we're in the process of producing 'official' API clients in Python and Golang that will be actively maintained, coincident with the release of newer versions of both our Websockets and REST APIs. In the meantime, our Client Engagement team has compiled a number of [code snippets, examples and Postman collections](https://support.kraken.com/hc/en-us/sections/360003946512-Example-API-Code) that many find useful. \n\n### Third Party Software\n\nBelow are other third party API client code libraries that may be used when writing your own API client. Please keep in mind that Payward nor the third party authors are responsible for losses due to bugs or improper use of the APIs. Payward has performed an initial review of the safety of the third party code before listing them but cannot vouch for any changes added since then, or for those that may be stale. If you have concerns, please contact support.\n\n| Language      | Link |\n| ----------- | ----------- |\n| C++ | [https://github.com/voidloop/krakenapi](https://github.com/voidloop/krakenapi) |\n| Golang | [https://github.com/Beldur/kraken-go-api-client](https://github.com/Beldur/kraken-go-api-client) |\n| NodeJS | [https://github.com/nothingisdead/npm-kraken-api](https://github.com/nothingisdead/npm-kraken-api) |\n| Python 3 | [https://github.com/veox/python3-krakenex](https://github.com/veox/python3-krakenex)       |\n| Python 2 | [https://github.com/veox/python2-krakenex](https://github.com/veox/python2-krakenex) |\n\nOther \n"
  contact:
    name: Support
    url: https://support.kraken.com/hc/en-us/requests/new?ticket_form_id=360000104043
  version: 1.0.0
  x-logo:
    url: kraken_logo_w.png
    altText: Kraken Logo
servers:
- url: https://api.kraken.com/0
  description: Production Server
security:
- API-Key: []
  API-Sign: []
tags:
- name: Market Data
- name: User Data
- name: User Trading
- name: User Funding
paths:
  /public/Time:
    get:
      tags:
      - Market Data
      summary: Get Server Time
      description: Get the server's time.
      operationId: getServerTime
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      security: []
      x-summary: Test123
  /public/SystemStatus:
    get:
      tags:
      - Market Data
      summary: Get System Status
      description: "Get the current system status or trading mode. \n"
      operationId: getSystemStatus
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                error: []
                result:
                  status: online
                  timestamp: 2021-03-21T15:33:02Z
      security: []
      x-codeSamples:
      - lang: cURL
        source: curl "https://api.kraken.com/0/public/SystemStatus"
      - lang: Python
        source: |
          import requests

          resp = requests.get('https://api.kraken.com/0/public/SystemStatus')

          print(resp.json())
  /public/Assets:
    get:
      tags:
      - Market Data
      summary: Get Asset Info
      description: Get information about the assets that are available for deposit, withdrawal, trading and staking.
      operationId: getAssetInfo
      parameters:
      - name: asset
        in: query
        description: Comma delimited list of assets to get info on.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: XBT,ETH
      - name: aclass
        in: query
        description: 'Asset class.  (optional, default: `currency`)'
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: currency
      responses:
        "200":
          description: Asset info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
      security: []
      x-codeSamples:
      - lang: cURL
        source: |
          curl "https://api.kraken.com/0/public/Assets"
      - lang: Python
        source: |
          import requests

          resp = requests.get('https://api.kraken.com/0/public/Assets')

          print(resp.json())
  /public/AssetPairs:
    get:
      tags:
      - Market Data
      summary: Get Tradable Asset Pairs
      description: Get tradable asset pairs
      operationId: getTradableAssetPairs
      parameters:
      - name: pair
        in: query
        description: Asset pairs to get data for
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: XXBTCZUSD,XETHXXBT
      - name: info
        in: query
        description: |
          Info to retrieve.  (optional)

            * `info` = all info
            * `leverage` = leverage info
            * `fees` = fees schedule
            * `margin` = margin info
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: info
          enum:
          - info
          - leverage
          - fees
          - margin
      responses:
        "200":
          description: Tradable asset pairs retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
      security: []
      x-codeSamples:
      - lang: cURL
        source: |
          curl "https://api.kraken.com/0/public/AssetPairs?pair=XXBTZUSD,XETHXXBT"
      - lang: Python
        source: |
          import requests

          resp = requests.get('https://api.kraken.com/0/public/AssetPairs?pair=XXBTZUSD,XETHXXBT')

          print(resp.json())
  /public/Ticker:
    get:
      tags:
      - Market Data
      summary: Get Ticker Information
      description: 'Note: Today''s prices start at midnight UTC'
      operationId: getTickerInformation
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Ticker info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
      security: []
  /public/OHLC:
    get:
      tags:
      - Market Data
      summary: Get OHLC Data
      description: 'Note: the last entry in the OHLC array is for the current, not-yet-committed frame and will always be present, regardless of the value of `since`.'
      operationId: getOHLCData
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: interval
        in: query
        description: Time frame interval in minutes
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
          enum:
          - 1
          - 5
          - 15
          - 30
          - 60
          - 240
          - 1440
          - 10080
          - 21600
      - name: since
        in: query
        description: Return committed OHLC data since given ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OHLC data retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
      security: []
  /public/Depth:
    get:
      tags:
      - Market Data
      summary: Get Order Book
      operationId: getOrderBook
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: count
        in: query
        description: Depth of book
        required: false
        style: form
        explode: true
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: Order book entries retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      security: []
  /public/Trades:
    get:
      tags:
      - Market Data
      summary: Get Recent Trades
      description: Returns the last 1000 trades by default
      operationId: getRecentTrades
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: since
        in: query
        description: Return trade data since given timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Trade data retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
      security: []
  /public/Spread:
    get:
      tags:
      - Market Data
      summary: Get Recent Spreads
      operationId: getRecentSpreads
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: since
        in: query
        description: Return spread data since given ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1548122302
      responses:
        "200":
          description: Spread data retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
              example:
                error: []
                result:
                  XXBTZUSD:
                  - - 1548120550
                    - "3538.70000"
                    - "3541.50000"
                  - - 1548120551
                    - "3538.80000"
                    - "3541.50000"
                  - - 1548120554
                    - "3538.80000"
                    - "3541.40000"
                  last: 1548122302
      security: []
      x-codeSamples:
      - lang: cURL
        source: |
          curl "https://api.kraken.com/0/public/Spread?pair=XBTUSD"
      - lang: Python
        source: |
          import requests

          resp = requests.get('https://api.kraken.com/0/public/Spread?pair=XBTUSD')

          print(resp.json())
  /private/GetWebSocketsToken:
    post:
      tags:
      - Websockets Authentication
      summary: Get Websockets Token
      description: |
        An authentication token must be requested via this REST API endpoint in order to connect to and authenticate with our [Websockets API](https://docs.kraken.com). The token should be used within 15 minutes of creation, but it does not expire once a successful Websockets connection and private subscription has been made and is maintained.

        > The 'Access WebSockets API' permission must be enabled for the API key in order to generate the authentication token.
      operationId: getWebsocketsToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_GetWebSocketsToken_body'
        required: true
      responses:
        "200":
          description: Websockets token retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
              example:
                error: []
                result:
                  token: 1Dwc4lzSwNWOAwkMdqhssNNFhs1ed606d1WcF3XfEMw
                  expires: 900
      x-codeSamples:
      - lang: cURL
        source: "curl -X \"POST\" \"http://api.kraken.com/0/private/GetWebSocketsToken\" \\\n    -H 'API-Key: <YOUR-API-KEY>' \\\n    -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \\\n    -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \\\n    --data-urlencode \"nonce=<YOUR-NONCE>\" \n"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\nresp = kraken_request('/0/private/GetWebSocketsToken', {\n    \"nonce\": str(int(1000*time.time()))\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/Balance:
    post:
      tags:
      - User Data
      summary: Get Account Balance
      description: |
        Retrieve all cash balances, net of pending withdrawals.
      operationId: getAccountBalance
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_Balance_body'
        required: true
      responses:
        "200":
          description: Account balances retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
  /private/TradeBalance:
    post:
      tags:
      - User Data
      summary: Get Trade Balance
      description: |
        Retrieve a summary of collateral balances, margin position valuations, equity and margin level.
      operationId: getTradeBalance
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Update Account Profile Request'
        required: true
      responses:
        "200":
          description: Trade balances retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
  /private/OpenOrders:
    post:
      tags:
      - User Data
      summary: Get Open Orders
      description: |
        Retrieve information about currently open orders.
      operationId: getOpenOrders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Open Orders Request Body'
        required: true
      responses:
        "200":
          description: Open orders info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
  /private/ClosedOrders:
    post:
      tags:
      - User Data
      summary: Get Closed Orders
      description: |
        Retrieve information about orders that have been closed (filled or cancelled). 50 results are returned at a time, the most recent by default.

        **Note:** If an order's tx ID is given for `start` or `end` time, the order's opening time (`opentm`) is used
      operationId: getClosedOrders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Closed Orders Request Body'
        required: true
      responses:
        "200":
          description: Closed orders info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
  /private/QueryOrders:
    post:
      tags:
      - User Data
      summary: Query Orders Info
      description: |
        Retrieve information about specific orders.
      operationId: getOrdersInfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Query Orders Info Request Body'
        required: true
      responses:
        "200":
          description: Orders info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
  /private/TradesHistory:
    post:
      tags:
      - User Data
      summary: Get Trades History
      description: |
        Retrieve information about trades/fills. 50 results are returned at a time, the most recent by default.
        * Unless otherwise stated, costs, fees, prices, and volumes are specified with the precision for the asset pair (`pair_decimals` and `lot_decimals`), not the individual assets' precision (`decimals`).
      operationId: getTradeHistory
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Trades History Request Body'
        required: true
      responses:
        "200":
          description: Trade history retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
  /private/QueryTrades:
    post:
      tags:
      - User Data
      summary: Query Trades Info
      description: |
        Retrieve information about specific trades/fills.
      operationId: getTradesInfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Trades Info Request Body'
        required: true
      responses:
        "200":
          description: Trades info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
  /private/OpenPositions:
    post:
      tags:
      - User Data
      summary: Get Open Positions
      description: Get information about open margin positions.
      operationId: getOpenPositions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_OpenPositions_body'
        required: true
      responses:
        "200":
          description: Open positions info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
  /private/Ledgers:
    post:
      tags:
      - User Data
      summary: Get Ledgers Info
      description: |
        Retrieve information about ledger entries. 50 results are returned at a time, the most recent by default.
      operationId: getLedgers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Ledgers Info Request Body'
        required: true
      responses:
        "200":
          description: Ledgers info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
  /private/QueryLedgers:
    post:
      tags:
      - User Data
      summary: Query Ledgers
      description: "Retrieve information about specific ledger entries. \n"
      operationId: getLedgersInfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Ledger Info Request Body'
        required: true
      responses:
        "200":
          description: Ledgers info retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
      x-codeSamples:
      - lang: cURL
        source: |
          curl -X "POST" "https://api.kraken.com/0/private/QueryLedgers" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>&id=LGBRJU-SQZ4L-5HLS3C,L3S26P-BHIOV-TTWYYI"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/QueryLedgers', {\n    \"nonce\": str(int(1000*time.time())),\n    \"id\": \"L4UESK-KG3EQ-UFO4T5\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/TradeVolume:
    post:
      tags:
      - User Data
      summary: Get Trade Volume
      description: |
        Note: If an asset pair is on a maker/taker fee schedule, the taker side is given in `fees` and maker side in `fees_maker`. For pairs not on maker/taker, they will only be given in `fees`.
      operationId: getTradeVolume
      parameters:
      - name: pair
        in: query
        description: Asset pair
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Trade Volume'
        required: true
      responses:
        "200":
          description: Trade Volume retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
  /private/AddExport:
    post:
      tags:
      - User Data
      summary: Request Export Report
      description: Request export of trades or ledgers.
      operationId: addExport
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_AddExport_body'
        required: true
      responses:
        "200":
          description: Export request made
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
              example:
                error: []
                result:
                  id: TCJA
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/AddExport', {\n    \"nonce\": str(int(1000*time.time())),\n    \"description\":\"my_trades_1\",\n    \"format\":\"CSV\",\n    \"report\":\"trades\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/ExportStatus:
    post:
      tags:
      - User Data
      summary: Get Export Report Status
      description: Get status of requested data exports.
      operationId: exportStatus
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_ExportStatus_body'
        required: true
      responses:
        "200":
          description: Export status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
              example:
                error: []
                result:
                - id: VSKC
                  descr: my_trades_1
                  format: CSV
                  report: trades
                  subtype: all
                  status: Processed
                  flags: "0"
                  fields: all
                  createdtm: "1616669085"
                  expiretm: "1617878685"
                  starttm: "1616669093"
                  completedtm: "1616669093"
                  datastarttm: "1614556800"
                  dataendtm: "1616669085"
                  aclass: forex
                  asset: all
                - id: TCJA
                  descr: my_trades_1
                  format: CSV
                  report: trades
                  subtype: all
                  status: Processed
                  flags: "0"
                  fields: all
                  createdtm: "1617363637"
                  expiretm: "1618573237"
                  starttm: "1617363664"
                  completedtm: "1617363664"
                  datastarttm: "1617235200"
                  dataendtm: "1617363637"
                  aclass: forex
                  asset: all
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/ExportStatus', {\n    \"nonce\": str(int(1000*time.time())),\n    \"report\":\"trades\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/RetrieveExport:
    post:
      tags:
      - User Data
      summary: Retrieve Data Export
      description: Retrieve a processed data export
      operationId: retrieveExport
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_RetrieveExport_body'
        required: true
      responses:
        "200":
          description: Data export report retrieved
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/RetrieveExport', {\n    \"nonce\": str(int(1000*time.time())),\n    \"id\":\"TCJA\"\n}, api_key, api_sec)\n\n# Write export to a new file 'myexport.zip'\ntarget_path = 'myexport.zip'\nhandle = open(target_path, \"wb\")\nfor chunk in resp.iter_content(chunk_size=512):\n    if chunk:  # filter out keep-alive new chunks\n        handle.write(chunk)\nhandle.close()\n"
  /private/RemoveExport:
    post:
      tags:
      - User Data
      summary: Delete Export Report
      description: Delete exported trades/ledgers report
      operationId: removeExport
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_RemoveExport_body'
        required: true
      responses:
        "200":
          description: Export report deleted or cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/RemoveExport', {\n    \"nonce\": str(int(1000*time.time())),\n    \"id\":\"TCJA\",\n    \"type\":\"delete\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/AddOrder:
    post:
      tags:
      - User Trading
      summary: Add Order
      description: |
        Place a new order.

        **Note**: See the [AssetPairs](#operation/getTradableAssetPairs) endpoint for details on the available trading pairs, their price and quantity precisions, order minimums, available leverage, etc.
      operationId: addOrder
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Add Standard Order Request Body'
        required: true
      responses:
        "200":
          description: Order added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
              examples:
                cURL (Limit with conditional stop-loss):
                  value:
                    error: []
                    result:
                      descr:
                        order: buy 2.12340000 XBTUSD @ limit 45000.1 with 2:1 leverage
                        close: close position @ stop loss 38000.0 -> limit 36000.0
                      txid:
                      - OUF4EM-FRGI2-MQMWZD
                Python (Limit):
                  value:
                    error: []
                    result:
                      descr:
                        order: buy 1.25000000 XBTUSD @ limit 27500.0
                      txid:
                      - OU22CG-KLAF2-FWUDD7
      x-codeSamples:
      - lang: cURL
        source: |
          // buy 2.1234 XBTUSD @ limit $45,000.1
          // with 2:1 leverage, with a follow up stop loss

          curl -X "POST" "https://api.kraken.com/0/private/AddOrder" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>"
               --data-urlencode "pair=XXBTZUSD" \
               --data-urlencode "type=buy" \
               --data-urlencode "ordertype=limit" \
               --data-urlencode "price=45000.1" \
               --data-urlencode "volume=2.1234" \
               --data-urlencode "leverage=2:1" \
               --data-urlencode "close[ordertype]=stop-loss-limit" \
               --data-urlencode "close[price]=38000" \
               --data-urlencode "close[price2]=36000"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/AddOrder', {\n    \"nonce\": str(int(1000*time.time())),\n    \"ordertype\": \"limit\",\n    \"type\": \"buy\",\n    \"volume\": 1.25,\n    \"pair\": \"XBTUSD\",\n    \"price\": 27500\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/CancelOrder:
    post:
      tags:
      - User Trading
      summary: Cancel Order
      description: |
        Cancel a particular open order (or set of open orders) by `txid` or `userref`
      operationId: cancelOrder
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cancel Open Order Request Body'
        required: true
      responses:
        "200":
          description: Open order cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_26'
      x-codeSamples:
      - lang: cURL
        source: |
          curl -X "POST" "https://api.kraken.com/0/private/CancelOrder" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>"
               --data-urlencode "txid=OYVGEW-VYV5B-UUEXSK"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/CancelOrder', {\n    \"nonce\": str(int(1000*time.time())),\n    \"txid\": \"OG5V2Y-RYKVL-DT3V3B\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/CancelAll:
    post:
      tags:
      - User Trading
      summary: Cancel All Orders
      description: |
        Cancel all open orders
      operationId: cancelAllOrders
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_CancelAll_body'
        required: true
      responses:
        "200":
          description: Open orders cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
              example:
                error: []
                result:
                  count: 4
      x-codeSamples:
      - lang: cURL
        source: "curl -X \"POST\" \"http://api.kraken.com/0/private/CancelAll\" \\\n    -H 'API-Key: <YOUR-API-KEY>' \\\n    -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \\\n    -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \\\n    --data-urlencode \"nonce=<YOUR-NONCE>\"  \n"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\nresp = kraken_request('/0/private/CancelAll', {\n    \"nonce\": str(int(1000*time.time()))\n}, api_key, api_sec)\n\nprint(resp.json())      \n"
  /private/CancelAllOrdersAfter:
    post:
      tags:
      - User Trading
      summary: Cancel All Orders After X
      description: |
        CancelAllOrdersAfter provides a "Dead Man's Switch" mechanism to protect the client from network malfunction, extreme latency or unexpected matching engine downtime. The client can send a request with a timeout (in seconds), that will start a countdown timer which will cancel *all* client orders when the timer expires. The client has to keep sending new requests to push back the trigger time, or deactivate the mechanism by specifying a timeout of 0. If the timer expires, all orders are cancelled and then the timer remains disabled until the client provides a new (non-zero) timeout.

        The recommended use is to make a call every 15 to 30 seconds, providing a timeout of 60 seconds. This allows the client to keep the orders in place in case of a brief disconnection or transient delay, while keeping them safe in case of a network breakdown. It is also recommended to disable the timer ahead of regularly scheduled trading engine maintenance (if the timer is enabled, all orders will be cancelled when the trading engine comes back from downtime - planned or otherwise).
      operationId: cancelAllOrdersAfter
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_CancelAllOrdersAfter_body'
        required: true
      responses:
        "200":
          description: Dead man's switch timer reset or disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
              example:
                error: []
                result:
                  currentTime: 2021-03-24T17:41:56Z
                  triggerTime: 2021-03-24T17:42:56Z
      x-codeSamples:
      - lang: cURL
        source: "curl -X \"POST\" \"http://api.kraken.com/0/private/CancelAllOrdersAfter\" \\\n    -H 'API-Key: <YOUR-API-KEY>' \\\n    -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \\\n    -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \\\n    --data-urlencode \"nonce=<YOUR-NONCE>\" \\\n    --data-urlencode \"timeout=60\" \n"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/CancelAllOrdersAfter', {\n    \"nonce\": str(int(1000*time.time())),\n    \"timeout\": 60\n}, api_key, api_sec)\n\nprint(resp.json())       \n"
  /private/DepositMethods:
    post:
      tags:
      - User Funding
      summary: Get Deposit Methods
      description: "Retrieve methods available for depositing a particular asset.      \n"
      operationId: getDepositMethods
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Desposit Methods Request Body'
        required: true
      responses:
        "200":
          description: Deposit methods retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
      x-codeSamples:
      - lang: cURL
        source: |
          curl -X "POST" "http://api.kraken.com/0/private/DepositMethods" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>" \
               --data-urlencode "asset=XBT"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/DepositMethods', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/DepositAddresses:
    post:
      tags:
      - User Funding
      summary: Get Deposit Addresses
      description: |
        Retrieve (or generate a new) deposit addresses for a particular asset and method.
      operationId: getDepositAddresses
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_DepositAddresses_body'
        required: true
      responses:
        "200":
          description: Deposit addresses retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
              example:
                error: []
                result:
                - address: 2N9fRkx5JTWXWHmXzZtvhQsufvoYRMq9ExV
                  expiretm: "0"
                  new: true
                - address: 2NCpXUCEYr8ur9WXM1tAjZSem2w3aQeTcAo
                  expiretm: "0"
                  new: true
                - address: 2Myd4eaAW96ojk38A2uDK4FbioCayvkEgVq
                  expiretm: "0"
      x-codeSamples:
      - lang: cURL
        source: |
          curl -X "POST" "http://api.kraken.com/0/private/DepositAddresses" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>" \
               --data-urlencode "asset=XBT" \
               --data-urlencode "method=Bitcoin"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/DepositAddresses', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\",\n    \"method\": \"Bitcoin\",\n    \"new\": True\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/DepositStatus:
    post:
      tags:
      - User Funding
      summary: Get Status of Recent Deposits
      description: "Retrieve information about recent deposits made.      \n"
      operationId: getStatusRecentDeposits
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Status of Recent Deposits Request Body'
        required: true
      responses:
        "200":
          description: Recent deposits retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_31'
      x-codeSamples:
      - lang: cURL
        source: |
          curl -X "POST" "http://api.kraken.com/0/private/DepositStatus" \
               -H 'API-Key: <YOUR-API-KEY>' \
               -H 'API-Sign: <YOUR-MSG-SIGNATURE>' \
               -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8' \
               --data-urlencode "nonce=<YOUR-NONCE>" \
               --data-urlencode "asset=XBT" \
               --data-urlencode "method=Bitcoin"
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/DepositStatus', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/WithdrawInfo:
    post:
      tags:
      - User Funding
      summary: Get Withdrawal Information
      description: "Retrieve fee information about potential withdrawals for a particular asset, key and amount.      \n"
      operationId: getWithdrawalInformation
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_WithdrawInfo_body'
        required: true
      responses:
        "200":
          description: Withdrawal information retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_32'
              example:
                error: []
                result:
                  method: Bitcoin
                  limit: "332.00956139"
                  amount: "0.72485000"
                  fee: "0.00015000"
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/WithdrawInfo', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\",\n    \"key\": \"btc_testnet_with1\",\n    \"amount\": 0.725\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/Withdraw:
    post:
      tags:
      - User Funding
      summary: Withdraw Funds
      description: "Make a withdrawal request.      \n"
      operationId: withdrawFunds
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_Withdraw_body'
        required: true
      responses:
        "200":
          description: Withdrawal created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_33'
              example:
                error: []
                result:
                  refid: AGBSO6T-UFMTTQ-I7KGS6
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/Withdraw', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\",\n    \"key\": \"btc_testnet_with1\",\n    \"amount\": 0.725\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/WithdrawStatus:
    post:
      tags:
      - User Funding
      summary: Get Status of Recent Withdrawals
      description: "Retrieve information about recently requests withdrawals.      \n"
      operationId: getStatusRecentWithdrawals
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Get Status of Recent Withdrawals Request Body'
        required: true
      responses:
        "200":
          description: Recent withdrawals retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
              example:
                error: []
                result:
                - method: Bitcoin
                  aclass: currency
                  asset: XXBT
                  refid: AGBZNBO-5P2XSB-RFVF6J
                  info: mzp6yUVMRxfasyfwzTZjjy38dHqMX7Z3GR
                  amount: "0.72485000"
                  fee: "0.00015000"
                  time: 1617014586
                  status: Pending
                - method: Bitcoin
                  aclass: currency
                  asset: XXBT
                  refid: AGBSO6T-UFMTTQ-I7KGS6
                  info: mzp6yUVMRxfasyfwzTZjjy38dHqMX7Z3GR
                  amount: "0.72485000"
                  fee: "0.00015000"
                  time: 1617015423
                  status: Failure
                  status-prop: canceled
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/WithdrawStatus', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"XBT\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/WithdrawCancel:
    post:
      tags:
      - User Funding
      summary: Request Withdrawal Cancelation
      description: "Cancel a recently requested withdrawal, if it has not already been successfully processed.       \n"
      operationId: cancelWithdrawal
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Request Withdrawal Cancelation Request Body'
        required: true
      responses:
        "200":
          description: Withdrawal cancellation requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_35'
              example:
                error: []
                result: true
  /private/WalletTransfer:
    post:
      tags:
      - User Funding
      summary: Request Wallet Transfer
      description: Transfer from Kraken spot wallet to Kraken Futures holding wallet. Note that a transfer in the other direction must be requested via the Kraken Futures [API endpoint](https://support.kraken.com/hc/en-us/articles/360028105972-Withdrawal-to-Spot-Wallet).
      operationId: walletTransfer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_WalletTransfer_body'
        required: true
      responses:
        "200":
          description: Transfer created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
      x-codeSamples:
      - lang: Python
        source: "import time\nimport os\nimport requests\n\n# Read Kraken API key and secret stored in environment variables\napi_url = \"https://api.kraken.com\"\napi_key = os.environ['API_KEY_KRAKEN']\napi_sec = os.environ['API_SEC_KRAKEN']\n\n# Attaches auth headers and returns results of a POST request\ndef kraken_request(uri_path, data, api_key, api_sec):\n    headers = {}\n    headers['API-Key'] = api_key\n    # get_kraken_signature() as defined in the 'Authentication' section\n    headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)             \n    req = requests.post((api_url + uri_path), headers=headers, data=data)\n    return req\n\n# Construct the request and print the result\nresp = kraken_request('/0/private/WalletTransfer', {\n    \"nonce\": str(int(1000*time.time())),\n    \"asset\": \"ETH\",\n    \"amount\": 0.100,\n    \"from\":\"Spot Wallet\",\n    \"to\":\"Futures Wallet\"\n}, api_key, api_sec)\n\nprint(resp.json())\n"
  /private/Stake:
    post:
      tags:
      - User Staking
      summary: Stake Asset
      description: Stake an asset from your spot wallet. This operation requires an API key with `Withdraw funds` permission.
      operationId: stake
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_Stake_body'
        required: true
      responses:
        "200":
          description: Staking successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
              example:
                error: []
                result:
                  refid: BOG5AE5-KSCNR4-VPNPEV
      x-codeSamples:
      - lang: Python
        source: |
          import time
          import os
          import requests

          # Read Kraken API key and secret stored in environment variables
          api_url = "https://api.kraken.com"
          api_key = os.environ['API_KEY_KRAKEN']
          api_sec = os.environ['API_SEC_KRAKEN']

          # Attaches auth headers and returns results of a POST request
          def kraken_request(uri_path, data, api_key, api_sec):
              headers = {}
              headers['API-Key'] = api_key
              # get_kraken_signature() as defined in the 'Authentication' section
              headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)
              req = requests.post((api_url + uri_path), headers=headers, data=data)
              return req

          # Construct the request and print the result
          resp = kraken_request('/0/private/Stake', {
              "nonce": str(int(1000*time.time())),
              "asset": "XXBT",
              "amount": 0.1,
              "method": "staked-xbt"
          }, api_key, api_sec)

          print(resp.json())
  /private/Unstake:
    post:
      tags:
      - User Staking
      summary: Unstake Asset
      description: Unstake an asset from your staking wallet. This operation requires an API key with `Withdraw funds` permission.
      operationId: unstake
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/private_Unstake_body'
        required: true
      responses:
        "200":
          description: Unstaking successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
              example:
                error: []
                result:
                  refid: BOG5AE5-KSCNR4-VPNPEV
      x-codeSamples:
      - lang: Python
        source: |
          import time
          import os
          import requests

          # Read Kraken API key and secret stored in environment variables
          api_url = "https://api.kraken.com"
          api_key = os.environ['API_KEY_KRAKEN']
          api_sec = os.environ['API_SEC_KRAKEN']

          # Attaches auth headers and returns results of a POST request
          def kraken_request(uri_path, data, api_key, api_sec):
              headers = {}
              headers['API-Key'] = api_key
              # get_kraken_signature() as defined in the 'Authentication' section
              headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)
              req = requests.post((api_url + uri_path), headers=headers, data=data)
              return req

          # Construct the request and print the result
          resp = kraken_request('/0/private/Unstake', {
              "nonce": str(int(1000*time.time())),
              "asset": "XXBT",
              "amount": 0.1,
              "method": "staked-xbt"
          }, api_key, api_sec)

          print(resp.json())
  /private/Staking/Assets:
    post:
      tags:
      - User Staking
      summary: List of Stakeable Assets
      description: |
        Returns the list of assets that the user is able to stake. This operation
        requires an API key with both `Withdraw funds` and `Query funds` permission.
      operationId: getStakingAssetInfo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staking_Assets_body'
        required: true
      responses:
        "200":
          description: List of stakeable assets retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_37'
  /private/Staking/Pending:
    post:
      tags:
      - User Staking
      summary: Get Pending Staking Transactions
      description: |
        Returns the list of pending staking transactions. Once resolved, these transactions
        will appear on the `List of Staking Transactions` endpoint.

        This operation requires an API key with both `Query funds` and `Withdraw funds` permissions.
      operationId: getStakingPendingDeposits
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staking_Pending_body'
        required: true
      responses:
        "200":
          description: Pending transactions retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
              example:
                result:
                - method: ada-staked
                  aclass: currency
                  asset: ADA.S
                  refid: RUSB7W6-ESIXUX-K6PVTM
                  amount: "0.34844300"
                  fee: "0.00000000"
                  time: 1622967367
                  status: Initial
                  type: bonding
                - method: xtz-staked
                  aclass: currency
                  asset: XTZ.S
                  refid: RUCXX7O-6MWQBO-CQPGAX
                  amount: "0.00746900"
                  fee: "0.00000000"
                  time: 1623074402
                  status: Initial
                  type: bonding
                error: []
      x-codeSamples:
      - lang: Python
        source: |
          import time
          import os
          import requests

          # Read Kraken API key and secret stored in environment variables
          api_url = "https://api.kraken.com"
          api_key = os.environ['API_KEY_KRAKEN']
          api_sec = os.environ['API_SEC_KRAKEN']

          # Attaches auth headers and returns results of a POST request
          def kraken_request(uri_path, data, api_key, api_sec):
              headers = {}
              headers['API-Key'] = api_key
              # get_kraken_signature() as defined in the 'Authentication' section
              headers['API-Sign'] = get_kraken_signature(uri_path, data, api_sec)
              req = requests.post((api_url + uri_path), headers=headers, data=data)
              return req

          # Construct the request and print the result
          resp = kraken_request('/0/private/Staking/Pending', {
              "nonce": str(int(1000*time.time()))
          }, api_key, api_sec)

          print(resp.json())
  /private/Staking/Transactions:
    post:
      tags:
      - User Staking
      summary: List of Staking Transactions
      description: |
        Returns the list of 1000 recent staking transactions from past 90 days.

        This operation requires an API key with `Query funds` permissions.
      operationId: getStakingTransactions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staking_Transactions_body'
        required: true
      responses:
        "200":
          description: List of transactions retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
components:
  schemas:
    nonce:
      type: integer
      description: Nonce used in construction of `API-Sign` header
      format: int32
    ApiError:
      type: array
      items:
        type: string
        description: Kraken API error
        example: EGeneral:Invalid arguments
    SystemStatus:
      type: string
      description: |
        * `online` - Kraken is operating normally. All order types may be submitted and trades can occur.
        * `maintenance` - The exchange is offline. No new orders or cancellations may be submitted.
        * `cancel_only` - Resting (open) orders can be cancelled but no new orders may be submitted. No trades will occur.
        * `post_only` - Only post-only limit orders can be submitted. Existing orders may still be cancelled. No trades will occur.
      enum:
      - online
      - maintenance
      - cancel_only
      - post_only
    AssetPairInfo:
      type: string
      description: |
        Type of asset pair info
          * `info` = all info
          * `leverage` = leverage info
          * `fees` = fees schedule
          * `margin` = margin info
      default: info
      enum:
      - info
      - leverage
      - fees
      - margin
    AssetInfo:
      type: object
      properties:
        aclass:
          type: string
          description: Asset class
        altname:
          type: string
          description: Alternate name
        decimals:
          type: integer
          description: Scaling decimal for record keeping
        display_decimals:
          type: integer
          description: Scaling decimal for output display
    AssetPairs:
      type: object
      properties:
        altname:
          type: string
          description: Alternate pair name
        wsname:
          type: string
          description: WebSocket pair name (if available)
        aclass_base:
          type: string
          description: Asset class of base component
        base:
          type: string
          description: Asset ID of base component
        aclass_quote:
          type: string
          description: Asset class of quote component
        quote:
          type: string
          description: Asset ID of quote component
        lot:
          type: string
          description: Volume lot size
          deprecated: true
        pair_decimals:
          type: integer
          description: Scaling decimal places for pair
        lot_decimals:
          type: integer
          description: Scaling decimal places for volume
        lot_multiplier:
          type: integer
          description: Amount to multiply lot volume by to get currency volume
        leverage_buy:
          type: array
          description: Array of leverage amounts available when buying
          items:
            type: integer
        leverage_sell:
          type: array
          description: Array of leverage amounts available when selling
          items:
            type: integer
        fees:
          type: array
          description: Fee schedule array in `[<volume>, <percent fee>]` tuples
          items:
            type: array
            items:
              oneOf:
              - type: integer
              - type: number
        fees_maker:
          type: array
          description: Maker fee schedule array in `[<volume>, <percentfee>]`  tuples (if on maker/taker)
          items:
            type: array
            items:
              oneOf:
              - type: integer
              - type: number
        fee_volume_currency:
          type: string
          description: Volume discount currency
        margin_call:
          type: integer
          description: Margin call level
        margin_stop:
          type: integer
          description: Stop-out/liquidation margin level
        ordermin:
          type: string
          description: Minimum order size (in terms of base currency)
    AssetTickerInfo:
      type: object
      properties:
        a:
          type: array
          description: Ask `[<price>, <whole lot volume>, <lot volume>]`
          items:
            type: string
        b:
          type: array
          description: Bid `[<price>, <whole lot volume>, <lot volume>]`
          items:
            type: string
        c:
          type: array
          description: Last trade closed `[<price>, <lot volume>]`
          items:
            type: string
        v:
          type: array
          description: Volume `[<today>, <last 24 hours>]`
          items:
            type: string
        p:
          type: array
          description: Volume weighted average price `[<today>, <last 24 hours>]`
          items:
            type: string
        t:
          type: array
          description: Number of trades `[<today>, <last 24 hours>]`
          items:
            type: integer
        l:
          type: array
          description: Low `[<today>, <last 24 hours>]`
          items:
            type: string
        h:
          type: array
          description: High `[<today>, <last 24 hours>]`
          items:
            type: string
        o:
          type: string
          description: Today's opening price
      description: Asset Ticker Info
    TickData:
      type: array
      description: |
        Tick data.
        `[int <time>, string <open>, string <high>, string <low>, string <close>, string <vwap>, string <volume>, int <count>]`
      items:
        maxItems: 8
        minItems: 8
        oneOf:
        - type: string
        - type: integer
    OrderBook:
      type: object
      properties:
        asks:
          type: array
          description: |
            Ask side array of entries `[<price>, <volume>, <timestamp>]`
          items:
            oneOf:
            - type: string
            - type: integer
        bid:
          type: array
          description: Bid side array of entries `[<price>, <volume>, <timestamp>]`
          items:
            oneOf:
            - type: string
            - type: integer
      description: |
        Asset Pair Order Book Entries
    SpreadData:
      type: array
      description: |
        Array of spread entries `[int <time>, string <bid>, string <ask>]`
      items:
        oneOf:
        - type: string
        - type: integer
    AccountBalance:
      title: AccountBalance
      type: object
      additionalProperties:
        type: string
        description: balance
        x-additionalPropertiesName: asset
      description: Cash balances, exlcluding pending withdrawals
    TradeBalance:
      type: object
      properties:
        eb:
          type: string
          description: Equivalent balance (combined balance of all currencies)
        tb:
          type: string
          description: Trade balance (combined balance of all equity currencies)
        m:
          type: string
          description: Margin amount of open positions
        n:
          type: string
          description: Unrealized net profit/loss of open positions
        c:
          type: string
          description: Cost basis of open positions
        v:
          type: string
          description: Current floating valuation of open positions
        e:
          type: string
          description: 'Equity: `trade balance + unrealized net profit/loss`'
        mf:
          type: string
          description: 'Free margin: `Equity - initial margin (maximum margin available to open new positions)`'
        ml:
          type: string
          description: 'Margin level: `(equity / initial margin) * 100`'
      description: Account Balance
    OrderStatus:
      type: string
      description: |
        Status of order
          * pending - order pending book entry
          * open - open order
          * closed - closed order
          * canceled - order canceled
          * expired - order expired
      enum:
      - pending
      - open
      - closed
      - canceled
      - expired
    OrderSide:
      type: string
      description: |
        Order side
          * buy - buy side
          * sell - sell side
      enum:
      - buy
      - sell
    OrderType:
      type: string
      enum:
      - market
      - limit
      - stop-loss
      - take-profit
      - stop-loss-limit
      - take-profit-limit
      - settle-position
    OrderDescription:
      type: object
      properties:
        pair:
          type: string
          description: Asset pair
        type:
          $ref: '#/components/schemas/OrderSide'
        ordertype:
          $ref: '#/components/schemas/OrderType'
        price:
          type: string
          description: primary price
        price2:
          type: string
          description: Secondary price
        leverage:
          type: string
          description: Amount of leverage
        order:
          type: string
          description: Order description
        close:
          type: string
          description: Conditional close order description (if conditional close set)
      description: Order description info
    OrderTrigger:
      type: string
      description: |
        Price signal used to trigger "stop-loss"
        "take-profit" "stop-loss-limit"
        "take-profit-limit" orders.
          * `last` is the implied trigger if this field is not set.
      default: last
      enum:
      - last
      - index
    OrderMiscInfo:
      type: string
      description: |
        Comma delimited list of miscellaneous info

          * `stopped` triggered by stop price
          * `touched` triggered by touch price
          * `liquidated` liquidation
          * `partial` partial fill
    OrderFlags:
      type: string
      description: |
        Comma delimited list of order flags

          * `post` post-only order (available when ordertype = limit)
          * `fcib` prefer fee in base currency (default if selling)
          * `fciq` prefer fee in quote currency (default if buying, mutually exclusive with `fcib`)
          * `nompp` disable [market price protection](https://support.kraken.com/hc/en-us/articles/201648183-Market-Price-Protection) for market orders
    OpenOrder:
      type: object
      properties:
        refid:
          type: string
          description: Referral order transaction ID that created this order
        userref:
          type: string
          description: User reference id
        status:
          $ref: '#/components/schemas/OrderStatus'
        opentm:
          type: number
          description: Unix timestamp of when order was placed
        starttm:
          type: number
          description: Unix timestamp of order start time (or 0 if not set)
        expiretm:
          type: number
          description: Unix timestamp of order end time (or 0 if not set)
        descr:
          $ref: '#/components/schemas/OrderDescription'
        vol:
          type: string
          description: Volume of order (base currency)
        vol_exec:
          type: string
          description: Volume executed (base currency)
        cost:
          type: string
          description: Total cost (quote currency unless)
        fee:
          type: string
          description: Total fee (quote currency)
        price:
          type: string
          description: Average price (quote currency)
        stopprice:
          type: string
          description: Stop price (quote currency)
        limitprice:
          type: string
          description: Triggered limit price (quote currency, when limit based order type triggered)
        trigger:
          $ref: '#/components/schemas/OrderTrigger'
        misc:
          $ref: '#/components/schemas/OrderMiscInfo'
        oflags:
          $ref: '#/components/schemas/OrderFlags'
        trades:
          type: array
          description: List of trade IDs related to order (if trades info requested and data available)
          items:
            type: string
      description: Open Order
    ClosedOrder:
      description: Closed order
      allOf:
      - $ref: '#/components/schemas/OpenOrder'
      - type: object
        properties:
          closetm:
            type: number
            description: Unix timestamp of when order was closed
          reason:
            type: string
            description: Additional info on status (if any)
    PositionStatus:
      type: string
      description: Position status
      enum:
      - open
      - closed
    Trade:
      type: object
      properties:
        ordertxid:
          type: string
          description: Order responsible for execution of trade
        pair:
          type: string
          description: Asset pair
        time:
          type: number
          description: Unix timestamp of trade
        type:
          $ref: '#/components/schemas/OrderSide'
        ordertype:
          $ref: '#/components/schemas/OrderType'
        price:
          type: string
          description: Average price order was executed at (quote currency)
        cost:
          type: string
          description: Total cost of order (quote currency)
        fee:
          type: string
          description: Total fee (quote currency)
        vol:
          type: string
          description: Volume (base currency)
        margin:
          type: string
          description: Initial margin (quote currency)
        misc:
          type: string
          description: |
            Comma delimited list of miscellaneous info:
            * `closing` &mdash; Trade closes all or part of a position
        posstatus:
          $ref: '#/components/schemas/PositionStatus'
        cprice:
          description: |
            Average price of closed portion of position (quote currency)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        ccost:
          description: |
            Total cost of closed portion of position (quote currency)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        cfee:
          description: |
            Total fee of closed portion of position (quote currency)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        cvol:
          description: |
            Total fee of closed portion of position (quote currency)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        cmargin:
          description: |
            Total margin freed in closed portion of position (quote currency)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        net:
          description: |
            Net profit/loss of closed portion of position (quote currency, quote currency scale)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
        trades:
          type: array
          description: |
            List of closing trades for position (if available)
            <br><sub><sup>Only present if trade opened a position</sub></sup>
          items:
            type: string
      description: Trade info
    Position:
      type: object
      properties:
        ordertxid:
          type: string
          description: Order ID responsible for the position
        posstatus:
          $ref: '#/components/schemas/PositionStatus'
        pair:
          type: string
          description: Asset pair
        time:
          type: number
          description: Unix timestamp of trade
        type:
          $ref: '#/components/schemas/OrderSide'
        ordertype:
          $ref: '#/components/schemas/OrderType'
        cost:
          type: string
          description: Opening cost of position (in quote currency)
        fee:
          type: string
          description: Opening fee of position (in quote currency)
        vol:
          type: string
          description: Position opening size (in base currency)
        vol_closed:
          type: string
          description: Quantity closed (in base currency)
        margin:
          type: string
          description: Initial margin consumed (in quote currency)
        value:
          type: string
          description: Current value of remaining position (if `docalcs` requested)
        net:
          type: string
          description: Unrealised P&L of remaining position (if `docalcs` requested)
        terms:
          type: string
          description: Funding cost and term of position
        rollovertm:
          type: string
          description: Timestamp of next margin rollover fee
        misc:
          type: string
          description: Comma delimited list of add'l info
        oflags:
          type: string
          description: Comma delimited list of opening order flags
      description: Position info
    LedgerEntryType:
      type: string
      description: Type of ledger entry
      enum:
      - trade
      - deposit
      - withdraw
      - transfer
      - margin
      - rollover
      - spend
      - receive
      - settled
      - adjustment
    LedgerEntry:
      type: object
      properties:
        refid:
          type: string
          description: Reference Id
        time:
          type: number
          description: Unix timestamp of ledger
        type:
          $ref: '#/components/schemas/LedgerEntryType'
        subtype:
          type: string
          description: Additional info relating to the ledger entry type, where applicable
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        amount:
          type: string
          description: Transaction amount
        fee:
          type: string
          description: Transaction fee
        balance:
          type: string
          description: Resulting balance
      description: Ledger entry
    FeeTierInfo:
      title: FeeTierInfo
      type: object
      properties:
        fee:
          type: string
          description: Current fee (in percent)
        min_fee:
          type: string
          description: minimum fee for pair (if not fixed fee)
        max_fee:
          type: string
          description: maximum fee for pair (if not fixed fee)
        next_fee:
          type: string
          description: next tier's fee for pair (if not fixed fee,  null if at lowest fee tier)
          nullable: true
        tier_volume:
          type: string
          description: volume level of current tier (if not fixed fee. null if at lowest fee tier)
          nullable: true
        next_volume:
          type: string
          description: volume level of next tier (if not fixed fee. null if at lowest fee tier)
          nullable: true
      description: Fee Tier Info
    TradeVolume:
      type: object
      properties:
        currency:
          type: string
          description: Volume currency
        volume:
          type: string
          description: Current discount volume
        fees:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/FeeTierInfo'
            x-additionalPropertiesName: pair
        fees_maker:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/FeeTierInfo'
            x-additionalPropertiesName: pair
      description: Trade Volume
    StakingLockInfo:
      required:
      - days
      - percentage
      type: object
      properties:
        days:
          type: number
          description: Days the funds are locked.
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description: Percentage of the funds that are locked (0 - 100)
    StakingTransactionInfo:
      title: Staking Transaction Info
      type: object
      properties:
        refid:
          type: string
          description: The reference ID of the transaction.
        type:
          type: string
          description: The type of transaction.
          enum:
          - bonding
          - reward
          - unbonding
        asset:
          type: string
          description: Asset code/name
        amount:
          type: string
          description: The transaction amount
        time:
          type: string
          description: Unix timestamp when the transaction was initiated.
        bond_start:
          type: integer
          description: Unix timestamp from the start of bond period (applicable only to `bonding` transactions).
        bond_end:
          type: integer
          description: Unix timestamp of the end of bond period (applicable only to `bonding` transactions).
        status:
          type: string
          description: Transaction status
          enum:
          - Initial
          - Pending
          - Settled
          - Success
          - Failure
    OrderAdded:
      type: object
      properties:
        descr:
          $ref: '#/components/schemas/OrderAdded_descr'
        txid:
          type: array
          description: |
            Transaction IDs for order
            <br><sup><sub>(if order was added successfully)</sup></sub>
          items:
            type: string
      description: New order response
    OrderEdited:
      type: object
      properties:
        descr:
          $ref: '#/components/schemas/OrderEdited_descr'
        txid:
          type: array
          description: New transaction ID
          items:
            type: string
        newuserref:
          type: string
          description: New userref if passed with the request
        olduserref:
          type: string
          description: Original userref if passed with the request
        orders_cancelled:
          maximum: 1
          minimum: 0
          type: integer
          description: Number of orders cancelled
        originaltxid:
          type: string
          description: Original transaction ID
        status:
          type: string
          description: Status of the order (Ok or Err)
          enum:
          - ok
          - err
        volume:
          type: string
          description: Updated volume
        price:
          type: string
          description: Updated price
        price2:
          type: string
          description: Updated price2
        error_message:
          type: string
          description: Error message if unsuccessful
      description: New order response
    OrderCancelled:
      title: OrderCancelled
      type: object
      properties:
        count:
          type: integer
          description: Number of orders cancelled.
          format: int32
        pending:
          type: boolean
          description: if set, order(s) is/are pending cancellation
    DepositMethod:
      title: DepositMethod
      type: object
      properties:
        method:
          type: string
          description: Name of deposit method
        limit:
          description: Maximum net amount that can be deposited right now, or false if no limit
        fee:
          type: string
          description: Amount of fees that will be paid
        address-setup-fee:
          type: string
          description: Whether or not method has an address setup fee
        gen-address:
          type: boolean
          description: Whether new addresses can be generated for this method.
      description: Deposit method
    DepositAddress:
      title: DepositAddress
      type: object
      properties:
        address:
          type: string
          description: Deposit Address
        expiretm:
          type: string
          description: Expiration time in unix timestamp, or 0 if not expiring
        new:
          type: boolean
          description: Whether or not address has ever been used
      description: Deposit Address
    Deposit:
      title: Deposit
      type: object
      properties:
        method:
          type: string
          description: Name of deposit method
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        refid:
          type: string
          description: Reference ID
        txid:
          type: string
          description: Method transaction ID
        info:
          type: string
          description: Method transaction information
        amount:
          type: string
          description: Amount deposited
        fee:
          description: Fees paid
        time:
          type: integer
          description: Unix timestamp when request was made
          format: int32
        status:
          description: |
            Status of deposit<br>
            <sup><sub>For information about the status, please refer to the [IFEX financial transaction states](https://github.com/globalcitizen/ifex-protocol/blob/master/draft-ifex-00.txt#L837).</sup></sub>
        status-prop:
          type: string
          description: |
            Addition status properties <sup><sub>(if available)</sup></sub><br>
              * `return` A return transaction initiated by Kraken
              * `onhold` Deposit is on hold pending review
          enum:
          - return
          - onhold
      description: Deposit
    WithdrawalInfo:
      title: WithdrawalInfo
      type: object
      properties:
        method:
          type: string
          description: Name of the withdrawal method that will be used
        limit:
          type: string
          description: Maximum net amount that can be withdrawn right now
        amount:
          type: string
          description: Net amount that will be sent, after fees
        fee:
          type: string
          description: Amount of fees that will be paid
      description: Withdrawal Info
    WithdrawalStatus:
      type: string
      description: |
        Status of withdraw<br>
        <sup><sub>For information about the status, please refer to the [IFEX financial transaction states](https://github.com/globalcitizen/ifex-protocol/blob/master/draft-ifex-00.txt#L837).</sup></sub>
      enum:
      - Initial
      - Pending
      - Settled
      - Success
      - Failure
    Withdrawal:
      title: Withdrawal
      type: object
      properties:
        method:
          type: string
          description: Name of withdrawal method
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        refid:
          type: string
          description: Reference ID
        txid:
          type: string
          description: Method transaction ID
        info:
          type: string
          description: Method transaction information
        amount:
          type: string
          description: Amount withdrawn
        fee:
          description: Fees paid
        time:
          type: integer
          description: Unix timestamp when request was made
          format: int32
        status:
          $ref: '#/components/schemas/WithdrawalStatus'
        status-prop:
          type: string
          description: |
            Addition status properties <sup><sub>(if available)</sup></sub><br>
              * `cancel-pending` cancelation requested
              * `canceled` canceled
              * `cancel-denied` cancelation requested but was denied
              * `return` a return transaction initiated by Kraken; it cannot be canceled
              * `onhold` withdrawal is on hold pending review
          enum:
          - cancel-pending
          - canceled
          - cancel-denied
          - return
          - onhold
      description: Withdrawal
    inline_response_200:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ServerTime'
        error:
          $ref: '#/components/schemas/ApiError'
      description: Success response
    inline_response_200_1:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_1_result'
        error:
          $ref: '#/components/schemas/ApiError'
    inline_response_200_2:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssetInfo_1'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          XXBT:
            aclass: currency
            altname: XBT
            decimals: 10
            display_decimals: 5
          ZEUR:
            aclass: currency
            altname: EUR
            decimals: 4
            display_decimals: 2
          ZUSD:
            aclass: currency
            altname: USD
            decimals: 4
            display_decimals: 2
    inline_response_200_3:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssetPair'
          description: Pair names and their info
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          XETHXXBT:
            altname: ETHXBT
            wsname: ETH/XBT
            aclass_base: currency
            base: XETH
            aclass_quote: currency
            quote: XXBT
            lot: unit
            pair_decimals: 5
            lot_decimals: 8
            lot_multiplier: 1
            leverage_buy:
            - 2
            - 3
            - 4
            - 5
            leverage_sell:
            - 2
            - 3
            - 4
            - 5
            fees:
            - - 0
              - 0.26
            - - 50000
              - 0.24
            - - 100000
              - 0.22
            - - 250000
              - 0.2
            - - 500000
              - 0.18
            - - 1000000
              - 0.16
            - - 2500000
              - 0.14
            - - 5000000
              - 0.12
            - - 10000000
              - 0.1
            fees_maker:
            - - 0
              - 0.16
            - - 50000
              - 0.14
            - - 100000
              - 0.12
            - - 250000
              - 0.1
            - - 500000
              - 0.08
            - - 1000000
              - 0.06
            - - 2500000
              - 0.04
            - - 5000000
              - 0.02
            - - 10000000
              - 0
            fee_volume_currency: ZUSD
            margin_call: 80
            margin_stop: 40
            ordermin: "0.005"
          XXBTZUSD:
            altname: XBTUSD
            wsname: XBT/USD
            aclass_base: currency
            base: XXBT
            aclass_quote: currency
            quote: ZUSD
            lot: unit
            pair_decimals: 1
            lot_decimals: 8
            lot_multiplier: 1
            leverage_buy:
            - 2
            - 3
            - 4
            - 5
            leverage_sell:
            - 2
            - 3
            - 4
            - 5
            fees:
            - - 0
              - 0.26
            - - 50000
              - 0.24
            - - 100000
              - 0.22
            - - 250000
              - 0.2
            - - 500000
              - 0.18
            - - 1000000
              - 0.16
            - - 2500000
              - 0.14
            - - 5000000
              - 0.12
            - - 10000000
              - 0.1
            fees_maker:
            - - 0
              - 0.16
            - - 50000
              - 0.14
            - - 100000
              - 0.12
            - - 250000
              - 0.1
            - - 500000
              - 0.08
            - - 1000000
              - 0.06
            - - 2500000
              - 0.04
            - - 5000000
              - 0.02
            - - 10000000
              - 0
            fee_volume_currency: ZUSD
            margin_call: 80
            margin_stop: 40
            ordermin: "0.0002"
    inline_response_200_4:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssetTickerInfo_1'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          XXBTZUSD:
            a:
            - "52609.60000"
            - "1"
            - "1.000"
            b:
            - "52609.50000"
            - "1"
            - "1.000"
            c:
            - "52641.10000"
            - "0.00080000"
            v:
            - "1920.83610601"
            - "7954.00219674"
            p:
            - "52389.94668"
            - "54022.90683"
            t:
            - 23329
            - 80463
            l:
            - "51513.90000"
            - "51513.90000"
            h:
            - "53219.90000"
            - "57200.00000"
            o: "52280.40000"
    inline_response_200_5:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_5_result'
        error:
          $ref: '#/components/schemas/ApiError'
    inline_response_200_6:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OrderBook_1'
        error:
          $ref: '#/components/schemas/ApiError'
    inline_response_200_7:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_7_result'
        error:
          $ref: '#/components/schemas/ApiError'
    inline_response_200_8:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_8_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_GetWebSocketsToken_body:
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_9:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_9_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_Balance_body:
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_10:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/AccountBalance'
        error:
          $ref: '#/components/schemas/ApiError'
    Update Account Profile Request:
      title: Update Account Profile Request
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Base asset to determine balance
          default: ZUSD
      description: Update Account Profile Request Body
    inline_response_200_11:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TradeBalance'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Open Orders Request Body:
      title: Get Open Orders Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
        userref:
          type: integer
          description: Restrict results to given user reference id
          format: int32
    inline_response_200_12:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/OpenOrders'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          open:
            OQCLML-BW3P3-BUCMWZ:
              userref: 0
              status: open
              opentm: 1.6166665598974E9
              starttm: 0
              expiretm: 0
              descr:
                pair: XBTUSD
                type: buy
                ordertype: limit
                price: "30010.0"
                price2: "0"
                leverage: none
                order: buy 1.25000000 XBTUSD @ limit 30010.0
                close: ""
              vol: "1.25000000"
              vol_exec: "0.37500000"
              cost: "11253.7"
              fee: "0.00000"
              price: "30010.0"
              stopprice: "0.00000"
              limitprice: "0.00000"
              misc: ""
              oflags: fciq
              trades:
              - TCCCTY-WE2O6-P3NB37
            OB5VMB-B4U2U-DK2WRW:
              userref: 120
              status: open
              opentm: 1.6166658995699E9
              starttm: 0
              expiretm: 0
              descr:
                pair: XBTUSD
                type: buy
                ordertype: limit
                price: "14500.0"
                price2: "0"
                leverage: 5:1
                order: buy 0.27500000 XBTUSD @ limit 14500.0 with 5:1 leverage
                close: ""
              vol: "0.27500000"
              vol_exec: "0.00000000"
              cost: "0.00000"
              fee: "0.00000"
              price: "0.00000"
              stopprice: "0.00000"
              limitprice: "0.00000"
              misc: ""
              oflags: fciq
            OXHXGL-F5ICS-6DIC67:
              userref: 120
              status: open
              opentm: 1.6166658940036E9
              starttm: 0
              expiretm: 0
              descr:
                pair: XBTUSD
                type: buy
                ordertype: limit
                price: "17500.0"
                price2: "0"
                leverage: 5:1
                order: buy 0.27500000 XBTUSD @ limit 17500.0 with 5:1 leverage
                close: ""
              vol: "0.27500000"
              vol_exec: "0.00000000"
              cost: "0.00000"
              fee: "0.00000"
              price: "0.00000"
              stopprice: "0.00000"
              limitprice: "0.00000"
              misc: ""
              oflags: fciq
            OLQCVY-B27XU-MBPCL5:
              userref: 251
              status: open
              opentm: 1.6166655567646E9
              starttm: 0
              expiretm: 0
              descr:
                pair: XBTUSD
                type: buy
                ordertype: limit
                price: "23500.0"
                price2: "0"
                leverage: none
                order: buy 0.27500000 XBTUSD @ limit 23500.0
                close: ""
              vol: "0.27500000"
              vol_exec: "0.00000000"
              cost: "0.00000"
              fee: "0.00000"
              price: "0.00000"
              stopprice: "0.00000"
              limitprice: "0.00000"
              misc: ""
              oflags: fciq
            OQCGAF-YRMIQ-AMJTNJ:
              userref: 0
              status: open
              opentm: 1.6166655110373E9
              starttm: 0
              expiretm: 0
              descr:
                pair: XBTUSD
                type: buy
                ordertype: stop-loss-limit
                price: "24500.0"
                price2: "0"
                leverage: none
                order: buy 1.25000000 XBTUSD @ limit 24500.0
                close: ""
              vol: "1.25000000"
              vol_exec: "0.00000000"
              cost: "0.00000"
              fee: "0.00000"
              price: "0.00000"
              stopprice: "0.00000"
              limitprice: "0.00000"
              misc: ""
              oflags: fciq
              trigger: index
    Get Closed Orders Request Body:
      title: Get Closed Orders Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
        userref:
          type: integer
          description: Restrict results to given user reference id
          format: int32
        start:
          type: integer
          description: Starting unix timestamp or order tx ID of results (exclusive)
        end:
          type: integer
          description: Ending unix timestamp or order tx ID of results (inclusive)
        ofs:
          type: integer
          description: Result offset for pagination
        closetime:
          type: string
          description: Which time to use to search
          default: both
          enum:
          - open
          - close
          - both
    inline_response_200_13:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ClosedOrders'
        error:
          $ref: '#/components/schemas/ApiError'
    Query Orders Info Request Body:
      title: Query Orders Info Request Body
      required:
      - nonce
      - txid
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
        userref:
          type: integer
          description: Restrict results to given user reference id
          format: int32
        txid:
          type: string
          description: Comma delimited list of transaction IDs to query info about (50 maximum)
    inline_response_200_14:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            oneOf:
            - title: OpenOrder
              description: Open Order
              allOf:
              - $ref: '#/components/schemas/OpenOrder'
            - title: ClosedOrder
              description: Closed Order
              allOf:
              - $ref: '#/components/schemas/ClosedOrder'
            x-additionalPropertiesName: txid
        error:
          $ref: '#/components/schemas/ApiError'
    Get Trades History Request Body:
      title: Get Trades History Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        type:
          type: string
          description: Type of trade
          default: all
          enum:
          - all
          - any position
          - closed position
          - closing position
          - no position
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
        start:
          type: integer
          description: Starting unix timestamp or trade tx ID of results (exclusive)
        end:
          type: integer
          description: Ending unix timestamp or trade tx ID of results (inclusive)
        ofs:
          type: integer
          description: Result offset for pagination
    inline_response_200_15:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TradeHistory'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Trades Info Request Body:
      title: Get Trades Info Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        txid:
          type: string
          description: Comma delimited list of transaction IDs to query info about (20 maximum)
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
    inline_response_200_16:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/Trade'
            x-additionalPropertiesName: txid
          description: Trade info
        error:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
    private_OpenPositions_body:
      required:
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        txid:
          type: string
          description: Comma delimited list of txids to limit output to
        docalcs:
          type: boolean
          description: Whether to include P&L calculations
          default: false
        consolidation:
          type: string
          description: Consolidate positions by market/pair
          enum:
          - market
    inline_response_200_17:
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200_17_result'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Ledgers Info Request Body:
      title: Get Ledgers Info Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Comma delimited list of assets to restrict output to
          default: all
        aclass:
          type: string
          description: Asset class
          default: currency
        type:
          type: string
          description: Type of ledger to retrieve
          default: all
          enum:
          - all
          - deposit
          - withdrawal
          - trade
          - margin
        start:
          type: integer
          description: Starting unix timestamp or ledger ID of results (exclusive)
        end:
          type: integer
          description: Ending unix timestamp or ledger ID of results (inclusive)
        ofs:
          type: integer
          description: Result offset for pagination
    inline_response_200_18:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/LedgersInfo'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Ledger Info Request Body:
      title: Get Ledger Info Request Body
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        id:
          type: string
          description: Comma delimited list of ledger IDs to query info about (20 maximum)
        trades:
          type: boolean
          description: Whether or not to include trades related to position in output
          default: false
    inline_response_200_19:
      type: object
      properties:
        result:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LedgerEntry_1'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Trade Volume:
      title: Get Trade Volume
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        pair:
          type: string
          description: Comma delimited list of asset pairs to get fee info on (optional)
        fee-info:
          type: boolean
          description: Whether or not to include fee info in results (optional)
    inline_response_200_20:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TradeVolume_1'
        error:
          $ref: '#/components/schemas/ApiError'
    private_AddExport_body:
      required:
      - description
      - nonce
      - report
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        report:
          type: string
          description: Type of data to export
          enum:
          - trades
          - ledgers
        format:
          type: string
          description: File format to export
          default: CSV
          enum:
          - CSV
          - TSV
        description:
          type: string
          description: Description for the export
        fields:
          type: string
          description: |
            Comma-delimited list of fields to include

            * `trades`: ordertxid, time, ordertype, price, cost, fee, vol, margin, misc, ledgers
            * `ledgers`: refid, time, type, aclass, asset, amount, fee, balance
          default: all
        starttm:
          type: integer
          description: UNIX timestamp for report start time (default 1st of the current month)
        endtm:
          type: integer
          description: UNIX timestamp for report end time (default now)
    inline_response_200_21:
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_21_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_ExportStatus_body:
      required:
      - nonce
      - report
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        report:
          type: string
          description: Type of reports to inquire about
          enum:
          - trades
          - ledgers
    inline_response_200_22:
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_22_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_RetrieveExport_body:
      required:
      - id
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        id:
          type: string
          description: Report ID to retrieve
    inline_response_200_23:
      properties:
        report:
          type: string
          description: Binary zip archive containing the report
          format: binary
    private_RemoveExport_body:
      required:
      - id
      - nonce
      - type
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        id:
          type: string
          description: ID of report to delete or cancel
        type:
          type: string
          description: |
            `delete` can only be used for reports that have already been processed. Use `cancel` for queued or processing reports.
          enum:
          - cancel
          - delete
    inline_response_200_24:
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_24_result'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          delete: true
    Add Standard Order Request Body:
      title: Add Standard Order Request Body
      required:
      - nonce
      - ordertype
      - pair
      - type
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        userref:
          type: integer
          description: |
            User reference id

            `userref` is an optional user-specified integer id that can be associated with any number of orders. Many clients choose a `userref` corresponding to a unique integer id generated by their systems (e.g. a timestamp). However, because we don't enforce uniqueness on our side, it can also be used to easily group orders by pair, side, strategy, etc. This allows clients to more readily cancel or query information about orders in a particular group, with fewer API calls by using `userref` instead of our `txid`, where supported.
          format: int32
        ordertype:
          type: string
          description: |
            Order type
          enum:
          - market
          - limit
          - stop-loss
          - take-profit
          - stop-loss-limit
          - take-profit-limit
          - settle-position
        type:
          type: string
          description: Order direction (buy/sell)
          enum:
          - buy
          - sell
        volume:
          type: string
          description: |
            Order quantity in terms of the base asset
            > Note: Volume can be specified as `0` for closing margin orders to automatically fill the requisite quantity.
        pair:
          type: string
          description: Asset pair `id` or `altname`
        price:
          type: string
          description: |
            Price

            * Limit price for `limit` orders
            * Trigger price for `stop-loss`, `stop-loss-limit`, `take-profit` and `take-profit-limit` orders
        price2:
          type: string
          description: |
            Secondary Price

            * Limit price for `stop-loss-limit` and `take-profit-limit` orders

            >  Note: Either `price` or `price2` can be preceded by `+`, `-`, or `#` to specify the order price as an offset relative to the last traded price. `+` adds the amount to, and `-` subtracts the amount from the last traded price. `#` will either add or subtract the amount to the last traded price, depending on the direction and order type used. Relative prices can be suffixed with a `%` to signify the relative amount as a percentage.
        trigger:
          type: string
          description: |
            Price signal used to trigger `stop-loss`, `stop-loss-limit`, `take-profit` and `take-profit-limit` orders.
            >  Note: This `trigger` type will as well be used for associated conditional close orders.
          default: last
          enum:
          - index
          - last
        leverage:
          type: string
          description: |
            Amount of leverage desired (default = none)
        oflags:
          type: string
          description: |
            Comma delimited list of order flags

              * `post` post-only order (available when ordertype = limit)
              * `fcib` prefer fee in base currency (default if selling)
              * `fciq` prefer fee in quote currency (default if buying, mutually exclusive with `fcib`)
              * `nompp` disable [market price protection](https://support.kraken.com/hc/en-us/articles/201648183-Market-Price-Protection) for market orders
        timeinforce:
          type: string
          description: |
            Time-in-force of the order to specify how long it should remain in the order book before being cancelled. GTC (Good-'til-cancelled) is default if the parameter is omitted. IOC (immediate-or-cancel) will immediately execute the amount possible and cancel any remaining balance rather than resting in the book. GTD (good-'til-date), if specified, must coincide with a desired `expiretm`.
          default: GTC
          enum:
          - GTC
          - IOC
          - GTD
        starttm:
          type: string
          description: |
            Scheduled start time. Can be specified as an absolute timestamp or as a number of seconds in the future.
              * `0` now (default)
              * `+<n>` schedule start time <n> seconds from now
              * `<n>` = unix timestamp of start time
        expiretm:
          type: string
          description: |
            Expiration time
              * `0` no expiration (default)
              * `+<n>` = expire <n> seconds from now, minimum 5 seconds
              * `<n>` = unix timestamp of expiration time
        close[ordertype]:
          type: string
          description: "Conditional close order type. \n> Note: [Conditional close orders](https://support.kraken.com/hc/en-us/articles/360038640052-Conditional-Close) are triggered by execution of the primary order in the same quantity and opposite direction, but once triggered are __independent orders__ that may reduce or increase net position.  \n"
          enum:
          - limit
          - stop-loss
          - take-profit
          - stop-loss-limit
          - take-profit-limit
        close[price]:
          type: string
          description: |
            Conditional close order `price`
        close[price2]:
          type: string
          description: |
            Conditional close order `price2`
        deadline:
          type: string
          description: "RFC3339 timestamp (e.g. 2021-04-01T00:18:45Z) after which the matching engine should reject the new order request, in presence of latency or order queueing. min now() + 5 seconds, max now() + 60 seconds. \n"
        validate:
          type: boolean
          description: Validate inputs only. Do not submit order.
          default: false
    inline_response_200_25:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/OrderAdded_1'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
    Cancel Open Order Request Body:
      title: Cancel Open Order Request Body
      required:
      - nonce
      - txid
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        txid:
          description: Open order transaction ID (txid) or user reference (userref)
          oneOf:
          - type: string
          - type: integer
    inline_response_200_26:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/OrderCancelled_1'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
          count: 1
    private_CancelAll_body:
      required:
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_27:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_27_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_CancelAllOrdersAfter_body:
      required:
      - nonce
      - timeout
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        timeout:
          type: integer
          description: Duration (in seconds) to set/extend the timer by
    inline_response_200_28:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_28_result'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Desposit Methods Request Body:
      title: Get Desposit Methods Request Body
      required:
      - asset
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being deposited
    inline_response_200_29:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/depositMethod'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
        - method: Bitcoin
          limit: false
          fee: "0.0000000000"
          gen-address: true
    private_DepositAddresses_body:
      required:
      - asset
      - method
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being deposited
        method:
          type: string
          description: Name of the deposit method
        new:
          type: boolean
          description: Whether or not to generate a new address
          default: false
    inline_response_200_30:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/depositAddress'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Status of Recent Deposits Request Body:
      title: Get Status of Recent Deposits Request Body
      required:
      - asset
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being deposited
        method:
          type: string
          description: Name of the deposit method
    inline_response_200_31:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Deposit_1'
        error:
          $ref: '#/components/schemas/ApiError'
      example:
        error: []
        result:
        - method: Bitcoin
          aclass: currency
          asset: XXBT
          refid: QGBCOYA-UNP53O-F2JDNS
          txid: 6544b41b607d8b2512baf801755a3a87b6890eacdb451be8a94059fb11f0a8d9
          info: 2Myd4eaAW96ojk38A2uDK4FbioCayvkEgVq
          amount: "0.78125000"
          fee: "0.0000000000"
          time: 1546992722
          status: Success
        - method: Bitcoin
          aclass: currency
          asset: XXBT
          refid: QGBHU3O-73ARA5-IFCFZT
          txid: fe12122222fe7fb1bc756a10ecd25f93015e959810ff1daf56535b9b01a803af
          info: 2Myd4eaAW96ojk38A2uDK4FbioCayvkEgVq
          amount: "0.78125000"
          time: 1546992722
          status: Settled
    private_WithdrawInfo_body:
      required:
      - amount
      - asset
      - key
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being withdrawn
        key:
          type: string
          description: Withdrawal key name, as set up on your account
        amount:
          type: string
          description: Amount to be withdrawn
    inline_response_200_32:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/withdrawalInfo'
        error:
          $ref: '#/components/schemas/ApiError'
    private_Withdraw_body:
      required:
      - amount
      - asset
      - key
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being withdrawn
        key:
          type: string
          description: Withdrawal key name, as set up on your account
        amount:
          type: string
          description: Amount to be withdrawn
    inline_response_200_33:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_33_result'
        error:
          $ref: '#/components/schemas/ApiError'
    Get Status of Recent Withdrawals Request Body:
      title: Get Status of Recent Withdrawals Request Body
      required:
      - asset
      - nonce
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being withdrawn
        method:
          type: string
          description: Name of the withdrawal method
    inline_response_200_34:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Withdrawal_1'
        error:
          $ref: '#/components/schemas/ApiError'
    Request Withdrawal Cancelation Request Body:
      title: Request Withdrawal Cancelation Request Body
      required:
      - asset
      - nonce
      - refid
      type: object
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset being withdrawn
        refid:
          type: string
          description: Withdrawal reference ID
    inline_response_200_35:
      properties:
        result:
          type: boolean
          description: Whether cancellation was successful or not.
        error:
          $ref: '#/components/schemas/ApiError'
    private_WalletTransfer_body:
      required:
      - amount
      - asset
      - from
      - nonce
      - to
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset to transfer (asset ID or `altname`)
          example: XBT
        from:
          type: string
          description: Source wallet
          enum:
          - Spot Wallet
        to:
          type: string
          description: Destination wallet
          enum:
          - Futures Wallet
        amount:
          type: string
          description: Amount to transfer
    inline_response_200_36:
      properties:
        result:
          $ref: '#/components/schemas/inline_response_200_36_result'
        error:
          $ref: '#/components/schemas/ApiError'
    private_Stake_body:
      required:
      - amount
      - asset
      - method
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset to stake (asset ID or `altname`)
          example: XBT
        amount:
          type: string
          description: Amount of the asset to stake
        method:
          type: string
          description: Name of the staking option to use (refer to the Staking Assets endpoint for the correct method names for each asset)
    private_Unstake_body:
      required:
      - amount
      - asset
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
        asset:
          type: string
          description: Asset to unstake (asset ID or `altname`). Must be a valid staking asset (e.g. `XBT.M`, `XTZ.S`, `ADA.S`)
          example: XBT.M
        amount:
          type: string
          description: Amount of the asset to stake
    Staking_Assets_body:
      required:
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_37:
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Staking Asset Information'
        error:
          $ref: '#/components/schemas/ApiError'
    Staking_Pending_body:
      required:
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_38:
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Staking Transaction Info'
        error:
          $ref: '#/components/schemas/ApiError'
    Staking_Transactions_body:
      required:
      - nonce
      properties:
        nonce:
          $ref: '#/components/schemas/nonce'
    inline_response_200_39:
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/StakingTransactionInfo'
        error:
          $ref: '#/components/schemas/ApiError'
    OrderAdded_descr:
      type: object
      properties:
        order:
          type: string
          description: Order description
        close:
          type: string
          description: Conditional close order description, if applicable
      description: Order description info
      example: null
    OrderEdited_descr:
      type: object
      properties:
        order:
          type: string
          description: Order description
      description: Order description info
      example: null
    ServerTime:
      title: ServerTime
      type: object
      properties:
        unixtime:
          type: integer
          description: Unix timestamp
        rfc1123:
          type: string
          description: RFC 1123 time format
      example: null
    inline_response_200_1_result:
      properties:
        status:
          type: string
          description: |
            Current system status

            * `online`  Kraken is operating normally. All order types may be submitted and trades can occur.
            * `maintenance`  The exchange is offline. No new orders or cancellations may be submitted.
            * `cancel_only`  Resting (open) orders can be cancelled but no new orders may be submitted. No trades will occur.
            * `post_only`  Only post-only limit orders can be submitted. Existing orders may still be cancelled. No trades will occur.
          enum:
          - online
          - maintenance
          - cancel_only
          - post_only
        timestamp:
          type: string
          description: Current timestamp (RFC3339)
      example: null
    AssetInfo_1:
      title: AssetInfo
      type: object
      properties:
        aclass:
          type: string
          description: Asset Class
        altname:
          type: string
          description: Alternate name
        decimals:
          type: integer
          description: Scaling decimal places for record keeping
        display_decimals:
          type: integer
          description: Scaling decimal places for output display
      description: Asset Info
      example: null
    AssetPair:
      title: AssetPair
      type: object
      properties:
        altname:
          type: string
          description: Alternate pair name
        wsname:
          type: string
          description: WebSocket pair name (if available)
        aclass_base:
          type: string
          description: Asset class of base component
        base:
          type: string
          description: Asset ID of base component
        aclass_quote:
          type: string
          description: Asset class of quote component
        quote:
          type: string
          description: Asset ID of quote component
        lot:
          type: string
          description: Volume lot size
          deprecated: true
        pair_decimals:
          type: integer
          description: Scaling decimal places for pair
        lot_decimals:
          type: integer
          description: Scaling decimal places for volume
        lot_multiplier:
          type: integer
          description: Amount to multiply lot volume by to get currency volume
        leverage_buy:
          type: array
          description: Array of leverage amounts available when buying
          items:
            type: integer
        leverage_sell:
          type: array
          description: Array of leverage amounts available when selling
          items:
            type: integer
        fees:
          type: array
          description: Fee schedule array in `[<volume>, <percent fee>]` tuples
          items:
            type: array
            items:
              oneOf:
              - type: integer
              - type: number
        fees_maker:
          type: array
          description: Maker fee schedule array in `[<volume>, <percent fee>]`  tuples (if on maker/taker)
          items:
            type: array
            items:
              oneOf:
              - type: integer
              - type: number
        fee_volume_currency:
          type: string
          description: Volume discount currency
        margin_call:
          type: integer
          description: Margin call level
        margin_stop:
          type: integer
          description: Stop-out/liquidation margin level
        ordermin:
          type: string
          description: Minimum order size (in terms of base currency)
      description: Trading Asset Pair
      example: null
    AssetTickerInfo_1:
      title: AssetTickerInfo
      type: object
      properties:
        a:
          type: array
          description: Ask `[<price>, <whole lot volume>, <lot volume>]`
          items:
            type: string
        b:
          type: array
          description: Bid `[<price>, <whole lot volume>, <lot volume>]`
          items:
            type: string
        c:
          type: array
          description: Last trade closed `[<price>, <lot volume>]`
          items:
            type: string
        v:
          type: array
          description: Volume `[<today>, <last 24 hours>]`
          items:
            type: string
        p:
          type: array
          description: Volume weighted average price `[<today>, <last 24 hours>]`
          items:
            type: string
        t:
          type: array
          description: Number of trades `[<today>, <last 24 hours>]`
          items:
            type: integer
        l:
          type: array
          description: Low `[<today>, <last 24 hours>]`
          items:
            type: string
        h:
          type: array
          description: High `[<today>, <last 24 hours>]`
          items:
            type: string
        o:
          type: string
          description: Today's opening price
      description: Asset Ticker Info
      example: null
    inline_response_200_5_result:
      type: object
      properties:
        last:
          type: integer
          description: ID to be used as since when polling for new, committed OHLC data
      additionalProperties:
        title: TickData
        type: array
        description: |
          Array of tick data arrays
          `[int <time>, string <open>, string <high>, string <low>, string <close>, string <vwap>, string <volume>, int <count>]`
        items:
          type: array
          items:
            maxItems: 8
            minItems: 8
            oneOf:
            - type: string
            - type: integer
        x-additionalPropertiesName: pair
      example: null
    OrderBook_1:
      title: OrderBook
      type: object
      properties:
        asks:
          type: array
          description: Ask side array of entries `[<price>, <volume>, <timestamp>]`
          items:
            example:
            - "3539.90000"
            - "0.801"
            - 1548119951
            oneOf:
            - type: string
            - type: integer
        bid:
          type: array
          description: Bid side array of entries `[<price>, <volume>, <timestamp>]`
          items:
            oneOf:
            - type: string
            - type: integer
      description: Asset Pair Order Book Entries
      example: null
    inline_response_200_7_result:
      type: object
      properties:
        last:
          type: string
          description: ID to be used as since when polling for new trade data
      additionalProperties:
        title: TickData
        type: array
        description: |
          Array of trade entries
          `[<price>, <volume>, <time>, <buy/sell>, <market/limit>, <miscellaneous>]`
        items:
          oneOf:
          - type: string
          - type: number
        x-additionalPropertiesName: pair
      example: null
    inline_response_200_8_result:
      type: object
      properties:
        last:
          type: integer
          description: ID to be used as since when polling for new spread data
      additionalProperties:
        title: SpreadData
        type: array
        description: |
          Array of spread entries
          `[int <time>, string <bid>, string <ask>]`
        items:
          example:
          - 1548120550
          - "3538.70000"
          - "3541.50000"
          oneOf:
          - type: string
          - type: integer
        x-additionalPropertiesName: pair
      example: null
    inline_response_200_9_result:
      type: object
      properties:
        token:
          type: string
          description: Websockets token
        expires:
          type: integer
          description: Time (in seconds) after which the token expires
      example: null
    OpenOrders:
      title: OpenOrders
      type: object
      properties:
        open:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/OpenOrder'
            x-additionalPropertiesName: txid
      description: Open Orders
      example: null
    ClosedOrders:
      title: ClosedOrders
      type: object
      properties:
        closed:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/OpenOrder'
            x-additionalPropertiesName: txid
        count:
          type: integer
          description: Amount of available order info matching criteria
      description: Closed Orders
      example: null
    TradeHistory:
      title: TradeHistory
      type: object
      properties:
        trades:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/Trade'
            x-additionalPropertiesName: txid
          description: Trade info
        count:
          type: integer
          description: Amount of available trades matching criteria
      description: Trade History
      example: null
    inline_response_200_17_result:
      properties:
        ordertxid:
          type: string
          description: Order ID responsible for the position
        posstatus:
          type: string
          description: Position status
          enum:
          - open
        pair:
          type: string
          description: Asset pair
        time:
          type: number
          description: Unix timestamp of trade
        type:
          type: string
          description: Direction (buy/sell) of position
        ordertype:
          type: string
          description: Order type used to open position
        cost:
          type: string
          description: Opening cost of position (in quote currency)
        fee:
          type: string
          description: Opening fee of position (in quote currency)
        vol:
          type: string
          description: Position opening size (in base currency)
        vol_closed:
          type: string
          description: Quantity closed (in base currency)
        margin:
          type: string
          description: Initial margin consumed (in quote currency)
        value:
          type: string
          description: Current value of remaining position (if `docalcs` requested)
        net:
          type: string
          description: Unrealised P&L of remaining position (if `docalcs` requested)
        terms:
          type: string
          description: Funding cost and term of position
        rollovertm:
          type: string
          description: Timestamp of next margin rollover fee
        misc:
          type: string
          description: Comma delimited list of add'l info
        oflags:
          type: string
          description: Comma delimited list of opening order flags
      example: null
    LedgersInfo:
      title: LedgersInfo
      type: object
      properties:
        ledger:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/LedgerEntry'
            x-additionalPropertiesName: ledger_id
        count:
          type: integer
          description: Amount of available ledger info matching criteria
      description: Ledgers Info
      example: null
    LedgerEntry_1:
      title: LedgerEntry
      type: object
      properties:
        refid:
          type: string
          description: Reference Id
        time:
          type: number
          description: Unix timestamp of ledger
        type:
          type: string
          description: Type of ledger entry
          enum:
          - trade
          - deposit
          - withdraw
          - transfer
          - margin
          - rollover
          - spend
          - receive
          - settled
          - adjustment
        subtype:
          type: string
          description: Additional info relating to the ledger entry type, where applicable
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        amount:
          type: string
          description: Transaction amount
        fee:
          type: string
          description: Transaction fee
        balance:
          type: string
          description: Resulting balance
      description: Ledger Entry
      example: null
    FeeTierInfo_1:
      title: FeeTierInfo
      type: object
      properties:
        fee:
          type: string
          description: Current fee (in percent)
        min_fee:
          type: string
          description: minimum fee for pair (if not fixed fee)
        max_fee:
          type: string
          description: maximum fee for pair (if not fixed fee)
        next_fee:
          type: string
          description: next tier's fee for pair (if not fixed fee,  null if at lowest fee tier)
          nullable: true
        tier_volume:
          type: string
          description: volume level of current tier (if not fixed fee. null if at lowest fee tier)
          nullable: true
        next_volume:
          type: string
          description: volume level of next tier (if not fixed fee. null if at lowest fee tier)
          nullable: true
      description: Fee Tier Info
      example: null
    TradeVolume_1:
      title: TradeVolume
      type: object
      properties:
        currency:
          type: string
          description: Volume currency
        volume:
          type: string
          description: Current discount volume
        fees:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FeeTierInfo_1'
        fees_maker:
          type: object
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/TradeVolume'
            x-additionalPropertiesName: pair
      description: Trade Volume
      example: null
    inline_response_200_21_result:
      type: object
      properties:
        id:
          type: string
          description: Report ID
      example: null
    inline_response_200_22_result:
      type: object
      properties:
        id:
          type: string
          description: Report ID
        descr:
          type: string
        format:
          type: string
        report:
          type: string
        subtype:
          type: string
        status:
          type: string
          description: Status of the report
          enum:
          - Queued
          - Processing
          - Processed
        flags:
          type: string
          deprecated: true
        fields:
          type: string
        createdtm:
          type: string
          description: UNIX timestamp of report request
        expiretm:
          type: string
          deprecated: true
        starttm:
          type: string
          description: UNIX timestamp report processing began
        completedtm:
          type: string
          description: UNIX timestamp report processing finished
        datastarttm:
          type: string
          description: UNIX timestamp of the report data start time
        dataendtm:
          type: string
          description: UNIX timestamp of the report data end time
        aclass:
          type: string
          deprecated: true
        asset:
          type: string
      example: null
    inline_response_200_24_result:
      type: object
      properties:
        delete:
          type: boolean
          description: Whether deletion was successful
        cancel:
          type: boolean
          description: Whether cancellation was successful
      example: null
    OrderAdded_1:
      title: OrderAdded
      type: object
      properties:
        descr:
          $ref: '#/components/schemas/OrderAdded_descr'
        txid:
          type: array
          description: |
            Transaction IDs for order
            <br><sup><sub>(if order was added successfully)</sup></sub>
          items:
            type: string
      example: null
    OrderCancelled_1:
      title: OrderCancelled
      type: object
      properties:
        count:
          type: integer
          description: Number of orders cancelled.
          format: int32
        pending:
          type: boolean
          description: if set, order(s) is/are pending cancellation
      example: null
    inline_response_200_27_result:
      type: object
      properties:
        count:
          type: integer
          description: Number of orders that were cancelled
      example: null
    inline_response_200_28_result:
      type: object
      properties:
        currentTime:
          type: string
          description: Timestamp (RFC3339 format) at which the request was received
        triggerTime:
          type: string
          description: Timestamp (RFC3339 format) after which all orders will be cancelled, unless the timer is extended or disabled
      example: null
    depositMethod:
      title: depositMethod
      type: object
      properties:
        method:
          type: string
          description: Name of deposit method
        limit:
          description: Maximum net amount that can be deposited right now, or false if no limit
        fee:
          type: string
          description: Amount of fees that will be paid
        address-setup-fee:
          type: string
          description: Whether or not method has an address setup fee
        gen-address:
          type: boolean
          description: Whether new addresses can be generated for this method.
      description: Deposit Method
      example: null
    depositAddress:
      title: depositAddress
      type: object
      properties:
        address:
          type: string
          description: Deposit Address
        expiretm:
          type: string
          description: Expiration time in unix timestamp, or 0 if not expiring
        new:
          type: boolean
          description: Whether or not address has ever been used
      description: Deposit Address
      example: null
    Deposit_1:
      title: Deposit
      type: object
      properties:
        method:
          type: string
          description: Name of deposit method
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        refid:
          type: string
          description: Reference ID
        txid:
          type: string
          description: Method transaction ID
        info:
          type: string
          description: Method transaction information
        amount:
          type: string
          description: Amount deposited
        fee:
          description: Fees paid
        time:
          type: integer
          description: Unix timestamp when request was made
          format: int32
        status:
          description: |
            Status of deposit<br>
            <sup><sub>For information about the status, please refer to the [IFEX financial transaction states](https://github.com/globalcitizen/ifex-protocol/blob/master/draft-ifex-00.txt#L837).</sup></sub>
        status-prop:
          type: string
          description: |
            Addition status properties <sup><sub>(if available)</sup></sub><br>
              * `return` A return transaction initiated by Kraken
              * `onhold` Deposit is on hold pending review
          enum:
          - return
          - onhold
      description: Deposit
      example: null
    withdrawalInfo:
      title: withdrawalInfo
      type: object
      properties:
        method:
          type: string
          description: Name of the withdrawal method that will be used
        limit:
          type: string
          description: Maximum net amount that can be withdrawn right now
        amount:
          type: string
          description: Net amount that will be sent, after fees
        fee:
          type: string
          description: Amount of fees that will be paid
      description: Withdrawal Info
      example: null
    inline_response_200_33_result:
      type: object
      properties:
        refid:
          type: string
          description: Reference ID
      example: null
    Withdrawal_1:
      title: Withdrawal
      type: object
      properties:
        method:
          type: string
          description: Name of withdrawal method
        aclass:
          type: string
          description: Asset class
        asset:
          type: string
          description: Asset
        refid:
          type: string
          description: Reference ID
        txid:
          type: string
          description: Method transaction ID
        info:
          type: string
          description: Method transaction information
        amount:
          type: string
          description: Amount withdrawn
        fee:
          description: Fees paid
        time:
          type: integer
          description: Unix timestamp when request was made
          format: int32
        status:
          type: string
          description: |
            Status of withdraw<br>
            <sup><sub>For information about the status, please refer to the [IFEX financial transaction states](https://github.com/globalcitizen/ifex-protocol/blob/master/draft-ifex-00.txt#L837).</sup></sub>
          enum:
          - Initial
          - Pending
          - Settled
          - Success
          - Failure
        status-prop:
          type: string
          description: |
            Addition status properties <sup><sub>(if available)</sup></sub><br>
              * `cancel-pending` cancelation requested
              * `canceled` canceled
              * `cancel-denied` cancelation requested but was denied
              * `return` a return transaction initiated by Kraken; it cannot be canceled
              * `onhold` withdrawal is on hold pending review
          enum:
          - cancel-pending
          - canceled
          - cancel-denied
          - return
          - onhold
      description: Withdrawal
      example: null
    inline_response_200_36_result:
      type: object
      properties:
        refid:
          type: string
          description: Reference ID
          example: BOG5AE5-KSCNR4-VPNPEV
      example: null
    inline_response_200_37_minimum_amount:
      required:
      - staking
      - unstaking
      type: object
      properties:
        unstaking:
          type: string
          default: "0"
        staking:
          type: string
          default: "0"
      description: Minimium amounts for staking/unstaking.
      example: null
    inline_response_200_37_lock:
      type: object
      properties:
        unstaking:
          type: array
          items:
            $ref: '#/components/schemas/StakingLockInfo'
        staking:
          type: array
          items:
            $ref: '#/components/schemas/StakingLockInfo'
        lockup:
          type: array
          items:
            $ref: '#/components/schemas/StakingLockInfo'
      description: Describes the locking periods and percentages for staking/unstaking operations.
      example: null
    inline_response_200_37_rewards:
      type: object
      properties:
        reward:
          type: string
          description: Reward earned while staking
        type:
          type: string
          description: Reward type
          enum:
          - percentage
      description: Describes the rewards earned while staking.
      example: null
    Staking Asset Information:
      title: Staking Asset Information
      required:
      - asset
      - name
      - rewards
      - staking_asset
      - staking_name
      type: object
      properties:
        asset:
          type: string
          description: Asset code/name
        staking_asset:
          type: string
          description: Staking asset code/name
        method:
          type: string
          description: Unique ID of the staking option (used in Stake/Unstake operations)
        on_chain:
          type: boolean
          description: Whether the staking operation is on-chain or not.
          default: true
        can_stake:
          type: boolean
          description: Whether the user will be able to stake this asset.
          default: true
        can_unstake:
          type: boolean
          description: Whether the user will be able to unstake this asset.
          default: true
        minimum_amount:
          $ref: '#/components/schemas/inline_response_200_37_minimum_amount'
        lock:
          $ref: '#/components/schemas/inline_response_200_37_lock'
        enabled_for_user:
          type: boolean
          default: true
        disabled:
          type: boolean
        rewards:
          $ref: '#/components/schemas/inline_response_200_37_rewards'
      example: null
    Staking Transaction Info:
      title: Staking Transaction Info
      type: object
      properties:
        refid:
          type: string
          description: The reference ID of the transaction.
        type:
          type: string
          description: The type of transaction.
          enum:
          - bonding
          - reward
          - unbonding
        asset:
          type: string
          description: Asset code/name
        amount:
          type: string
          description: The transaction amount
        time:
          type: string
          description: Unix timestamp when the transaction was initiated.
        bond_start:
          type: integer
          description: Unix timestamp from the start of bond period (applicable only to `bonding` transactions).
        bond_end:
          type: integer
          description: Unix timestamp of the end of bond period (applicable only to `bonding` transactions).
        status:
          type: string
          description: Transaction status
          enum:
          - Initial
          - Pending
          - Settled
          - Success
          - Failure
      example: null
  parameters:
    AssetList:
      name: asset
      in: query
      description: Comma delimited list of assets to get info on
      required: false
      style: form
      explode: true
      schema:
        type: string
    AssetClass:
      name: aclass
      in: query
      description: Asset Class
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: currency
    AssetPairList:
      name: pair
      in: query
      description: Comma delimited list of asset pairs to get data for
      required: false
      style: form
      explode: true
      schema:
        type: string
    AssetPair:
      name: pair
      in: query
      description: Asset pair
      required: false
      style: form
      explode: true
      schema:
        type: string
    AssetPairInfo:
      name: pair
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/AssetPairInfo'
    BarInterval:
      name: interval
      in: query
      description: Time frame interval in minutes
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 1
        enum:
        - 1
        - 5
        - 15
        - 30
        - 60
        - 240
        - 1440
        - 10080
        - 21600
  securitySchemes:
    API-Key:
      type: apiKey
      description: The "API-Key" header should contain your API key.
      name: API-Key
      in: header
    API-Sign:
      type: apiKey
      description: "Authenticated requests should be signed with the \"API-Sign\" header, using a signature generated with your private key, nonce, encoded payload, and URI path according to:\n```none\nHMAC-SHA512 of (URI path + SHA256(nonce + POST data)) and base64 decoded secret API key\n```\n\n### Example Signature\n\nThe following is a specific example of a signature generated with a particular private key, nonce, and payload corresponding to a new limit order (buy 1.25 XBTUSD at $37,500). If your code is generating a different signature (\"API-Sign\") for thie example, then there is likely an issue with your application of the above methodology. Code snippets for generating the signature in Python, Golang and Node.js follow below.\n\n| Field | Value |\n|-|-|\n| Private Key | kQH5HW/8p1uGOVjbgWA7FunAmGO8lsSUXNsu3eow76sz84Q18fWxnyRzBHCd3pd5nE9qa99HAZtuZuj6F1huXg== |\n| Nonce |  1616492376594 |\n| Encoded Payload | nonce=1616492376594&ordertype=limit&pair=XBTUSD&price=37500&type=buy&volume=1.25 | \n| URI Path |  /0/private/AddOrder | \n| __API-Sign__ | __4/dpxb3iT4tp/ZCVEwSnEsLxx0bqyhLpdfOpc6fn7OR8+UClSV5n9E6aSS8MPtnRfp32bAb0nmbRn6H8ndwLUQ==__ | \n\n### Code Examples\n\n#### Python\n```python\nimport urllib.parse\nimport hashlib\nimport hmac\nimport base64\n\ndef get_kraken_signature(urlpath, data, secret):\n\n    postdata = urllib.parse.urlencode(data)\n    encoded = (str(data['nonce']) + postdata).encode()\n    message = urlpath.encode() + hashlib.sha256(encoded).digest()\n\n    mac = hmac.new(base64.b64decode(secret), message, hashlib.sha512)\n    sigdigest = base64.b64encode(mac.digest())\n    return sigdigest.decode()\n\napi_sec = \"kQH5HW/8p1uGOVjbgWA7FunAmGO8lsSUXNsu3eow76sz84Q18fWxnyRzBHCd3pd5nE9qa99HAZtuZuj6F1huXg==\"\n\ndata = {\n    \"nonce\": \"1616492376594\", \n    \"ordertype\": \"limit\", \n    \"pair\": \"XBTUSD\",\n    \"price\": 37500, \n    \"type\": \"buy\",\n    \"volume\": 1.25\n}\n\nsignature = get_kraken_signature(\"/0/private/AddOrder\", data, api_sec)\nprint(\"API-Sign: {}\".format(signature))\n\n```\n#### Golang [link](https://play.golang.org/p/SqP2pajUH6K)\n```go\npackage main\n\nimport (\n  \"crypto/hmac\"\n  \"crypto/sha256\"\n  \"crypto/sha512\"\n  \"encoding/base64\"\n  \"net/url\"\n  \"fmt\"\n)\n\nfunc getKrakenSignature(url_path string, values url.Values, secret []byte) string {\n  \n  sha := sha256.New()\n  sha.Write([]byte(values.Get(\"nonce\") + values.Encode()))\n  shasum := sha.Sum(nil)\n\n  mac := hmac.New(sha512.New, secret)\n  mac.Write(append([]byte(url_path), shasum...))\n  macsum := mac.Sum(nil)\n  return base64.StdEncoding.EncodeToString(macsum)\n}\n\nfunc main() {\n\n  apiSecret := \"kQH5HW/8p1uGOVjbgWA7FunAmGO8lsSUXNsu3eow76sz84Q18fWxnyRzBHCd3pd5nE9qa99HAZtuZuj6F1huXg==\"\n\n  payload := url.Values{}\n  payload.Add(\"pair\",\"XBTUSD\")\n  payload.Add(\"type\",\"buy\")\n  payload.Add(\"ordertype\",\"limit\")\n  payload.Add(\"price\",\"37500\")\n  payload.Add(\"volume\",\"1.25\")\n  payload.Add(\"nonce\",\"1616492376594\")\n\n  b64DecodedSecret, _ := base64.StdEncoding.DecodeString(apiSecret)\n\n  signature := getKrakenSignature(\"/0/private/AddOrder\", payload, b64DecodedSecret)\n  fmt.Printf(\"API-Sign: \" + signature +\"\\n\")\n}\n```\n\n#### Node JS\n```js\nconst crypto = require('crypto');\nconst qs     = require('qs');\n\nconst getMessageSignature = (path, request, secret, nonce) => {\n    const message       = qs.stringify(request);\n    const secret_buffer = new Buffer(secret, 'base64');\n    const hash          = new crypto.createHash('sha256');\n    const hmac          = new crypto.createHmac('sha512', secret_buffer);\n    const hash_digest   = hash.update(nonce + message).digest('binary');\n    const hmac_digest   = hmac.update(path + hash_digest, 'binary').digest('base64');\n\n    return hmac_digest;\n};\n```\n"
      name: API-Sign
      in: header
x-tagGroups:
- name: Public Endpoints
  tags:
  - Market Data
- name: Authenticated Endpoints
  tags:
  - User Data
  - User Trading
  - User Funding
  - User Staking
  - Websockets Authentication
